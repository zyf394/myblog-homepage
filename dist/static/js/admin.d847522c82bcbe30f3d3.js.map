{"version":3,"sources":["webpack:///static/js/admin.d847522c82bcbe30f3d3.js","webpack:///./src/admin/index.js","webpack:///../~/showdown/dist/showdown.js?f100","webpack:///./src/admin/routes.js","webpack:///Admin.vue","webpack:///ArticleList.vue","webpack:///Content.vue?d02d","webpack:///Nav.vue","webpack:///Articles.vue","webpack:///Edit.vue","webpack:///Home.vue?5948","webpack:///./src/admin/Admin.vue?9258","webpack:///./src/admin/page/Edit.vue?ba95","webpack:///./src/admin/page/Home.vue?3ed8","webpack:///./src/admin/components/Content.vue?4aff","webpack:///./src/admin/components/Nav.vue?83f3","webpack:///./src/admin/page/Articles.vue?b48d","webpack:///./src/admin/components/ArticleList.vue?e60a","webpack:///./src/admin/Admin.vue","webpack:///./src/admin/components/ArticleList.vue","webpack:///./src/admin/components/Content.vue","webpack:///./src/admin/components/Nav.vue","webpack:///./src/admin/page/Articles.vue","webpack:///./src/admin/page/Edit.vue","webpack:///./src/admin/page/Home.vue"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_vueResource","_vueResource2","_routes","_routes2","_Admin","_Admin2","use","router","history","start","extend","window","4","__WEBPACK_AMD_DEFINE_RESULT__","getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","describe","type","noHeaderId","prefixHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","literalMidWordUnderscores","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","JSON","parse","stringify","ret","opt","hasOwnProperty","validate","extension","name","errMsg","valid","error","showdown","helper","isArray","i","length","baseMsg","ext","isString","toLowerCase","isUndefined","listeners","filter","regex","ln","RegExp","replace","escapeCharactersCallback","wholeMatch","m1","charCodeToEscape","charCodeAt","parsers","extensions","globalOptions","flavor","github","vanilla","setOption","key","value","this","getOption","getOptions","resetOptions","setFlavor","preset","option","getDefaultOptions","subParser","func","Error","stdExtName","validExtension","getAllExtensions","removeExtension","resetExtensions","validateExtension","console","warn","a","String","isFunction","getType","toString","call","forEach","callback","constructor","Array","s","escapeCharacters","text","charsToEscape","afterBackslash","regexString","rgxFindMatchPos","str","left","right","flags","t","m","end","f","g","indexOf","x","l","pos","exec","test","lastIndex","index","match","push","matchRecursiveRegExp","matchPos","results","slice","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","join","msg","alert","log","Converter","converterOptions","_constructor","gOpt","options","_parseExtension","legacyExtensionLoading","validExt","langExtensions","outputModifiers","listen","rTrimInputText","rsp","rgx","_dispatch","evtName","globals","ei","nText","makeHtml","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","converter","addExtension","useExtension","extensionName","splice","ii","language","output","writeAnchorTag","m2","m3","m4","m5","m6","m7","linkText","linkId","url","title","search","result","replaceMail","unescapedStr","simpleURLRegex","delimUrlRegex","simpleMailRegex","delimMailRegex","bq","pre","pattern","codeblock","nextChar","c","leadingText","numSpaces","addr","encode","ch","Math","floor","random","r","tag","blockText","blockTags","repFunc","txt","config","matches","headerId","escapedId","prefixHeader","isNaN","parseInt","setextRegexH1","setextRegexH2","spanGamut","hID","hLevel","hashBlock","matchFound","span","header","writeImageTag","altText","width","height","gDims","inlineRegExp","referenceRegExp","processListItems","listStr","trimTrailing","isParagraphed","taskbtn","checked","trim","item","bulletStyle","otp","parseConsecutiveLists","list","listType","counterRxg","subLists","parseCL","wholeList","grafs","split","grafsOut","grafsOutIt","codeFlag","delim","$1","num","$2","re","blankLines","parseStyles","sLine","parseHeaders","style","id","tableHeaderId","parseCells","cell","subText","buildTable","headers","cells","tb","tblLgn","tableRgx","rawTable","tableLines","rawHeaders","map","rawStyles","rawCells","styles","shift","row","charCodeToReplace","fromCharCode","undefined","32","Object","defineProperty","/","component","_Home2","subRoutes","/edit","_Edit2","/edit/:id","/articles/","_Articles2","/articles/:id","_Home","_Edit","_Articles","34","_Nav","_Nav2","components","NavComponent","ready","35","_markdown","_highlight","_highlight2","props","articles","content","publishTime","watch","val","oldVal","document","querySelectorAll","block","highlightBlock","methods","jumpToEdit","go","addCurrentClass","event","currentTarget","currentItem","querySelector","className","markedContent","me","html","$route","params","markdown","toHTML","36","_getIterator2","_getIterator3","_showdown","_showdown2","data","article","status","article.content","inputTitle","target","inputContent","saveArticle","postData","author","addArticle","editArticle","$http","post","then","response","resData","err","delArticle","errno","getArticles","fileUpload","upload","getElementById","files","formData","FormData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","file","append","imageData","imageName","imageUrl","Number","$watch","newVal","37","navBarList","icon","href","current","$index","38","_ArticleList","_ArticleList2","ArticleComponent","created","39","_Content","_Content2","ContentComponent","40","83","84","85","87","89","92","261","262","263","268","270","272","275","279","__vue_script__","__vue_template__","template","280","281","282","283","284","285"],"mappings":"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","file":"static/js/admin.d847522c82bcbe30f3d3.js","sourcesContent":["webpackJsonp([3,0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(30);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(29);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _vueResource = __webpack_require__(28);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _routes = __webpack_require__(32);\n\t\n\tvar _routes2 = _interopRequireDefault(_routes);\n\t\n\tvar _Admin = __webpack_require__(279);\n\t\n\tvar _Admin2 = _interopRequireDefault(_Admin);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t_vue2.default.use(_vueResource2.default);\n\t\n\tvar router = new _vueRouter2.default({\n\t  history: false\n\t});\n\t\n\t(0, _routes2.default)(router);\n\t\n\trouter.start(_vue2.default.extend(_Admin2.default), '#root');\n\t\n\twindow.router = router;\n\n/***/ },\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;;/*! showdown 21-06-2016 */\r\n\t(function(){\r\n\t/**\n\t * Created by Tivie on 13-07-2015.\n\t */\n\t\n\tfunction getDefaultOpts(simple) {\n\t  'use strict';\n\t\n\t  var defaultOptions = {\n\t    omitExtraWLInCodeBlocks: {\n\t      default: false,\n\t      describe: 'Omit the default extra whiteline added to code blocks',\n\t      type: 'boolean'\n\t    },\n\t    noHeaderId: {\n\t      default: false,\n\t      describe: 'Turn on/off generated header id',\n\t      type: 'boolean'\n\t    },\n\t    prefixHeaderId: {\n\t      default: false,\n\t      describe: 'Specify a prefix to generated header ids',\n\t      type: 'string'\n\t    },\n\t    headerLevelStart: {\n\t      default: false,\n\t      describe: 'The header blocks level start',\n\t      type: 'integer'\n\t    },\n\t    parseImgDimensions: {\n\t      default: false,\n\t      describe: 'Turn on/off image dimension parsing',\n\t      type: 'boolean'\n\t    },\n\t    simplifiedAutoLink: {\n\t      default: false,\n\t      describe: 'Turn on/off GFM autolink style',\n\t      type: 'boolean'\n\t    },\n\t    literalMidWordUnderscores: {\n\t      default: false,\n\t      describe: 'Parse midword underscores as literal underscores',\n\t      type: 'boolean'\n\t    },\n\t    strikethrough: {\n\t      default: false,\n\t      describe: 'Turn on/off strikethrough support',\n\t      type: 'boolean'\n\t    },\n\t    tables: {\n\t      default: false,\n\t      describe: 'Turn on/off tables support',\n\t      type: 'boolean'\n\t    },\n\t    tablesHeaderId: {\n\t      default: false,\n\t      describe: 'Add an id to table headers',\n\t      type: 'boolean'\n\t    },\n\t    ghCodeBlocks: {\n\t      default: true,\n\t      describe: 'Turn on/off GFM fenced code blocks support',\n\t      type: 'boolean'\n\t    },\n\t    tasklists: {\n\t      default: false,\n\t      describe: 'Turn on/off GFM tasklist support',\n\t      type: 'boolean'\n\t    },\n\t    smoothLivePreview: {\n\t      default: false,\n\t      describe: 'Prevents weird effects in live previews due to incomplete input',\n\t      type: 'boolean'\n\t    },\n\t    smartIndentationFix: {\n\t      default: false,\n\t      description: 'Tries to smartly fix identation in es6 strings',\n\t      type: 'boolean'\n\t    }\n\t  };\n\t  if (simple === false) {\n\t    return JSON.parse(JSON.stringify(defaultOptions));\n\t  }\n\t  var ret = {};\n\t  for (var opt in defaultOptions) {\n\t    if (defaultOptions.hasOwnProperty(opt)) {\n\t      ret[opt] = defaultOptions[opt].default;\n\t    }\n\t  }\n\t  return ret;\n\t}\n\t\r\n\t/**\n\t * Created by Tivie on 06-01-2015.\n\t */\n\t\n\t// Private properties\n\tvar showdown = {},\n\t    parsers = {},\n\t    extensions = {},\n\t    globalOptions = getDefaultOpts(true),\n\t    flavor = {\n\t      github: {\n\t        omitExtraWLInCodeBlocks:   true,\n\t        prefixHeaderId:            'user-content-',\n\t        simplifiedAutoLink:        true,\n\t        literalMidWordUnderscores: true,\n\t        strikethrough:             true,\n\t        tables:                    true,\n\t        tablesHeaderId:            true,\n\t        ghCodeBlocks:              true,\n\t        tasklists:                 true\n\t      },\n\t      vanilla: getDefaultOpts(true)\n\t    };\n\t\n\t/**\n\t * helper namespace\n\t * @type {{}}\n\t */\n\tshowdown.helper = {};\n\t\n\t/**\n\t * TODO LEGACY SUPPORT CODE\n\t * @type {{}}\n\t */\n\tshowdown.extensions = {};\n\t\n\t/**\n\t * Set a global option\n\t * @static\n\t * @param {string} key\n\t * @param {*} value\n\t * @returns {showdown}\n\t */\n\tshowdown.setOption = function (key, value) {\n\t  'use strict';\n\t  globalOptions[key] = value;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Get a global option\n\t * @static\n\t * @param {string} key\n\t * @returns {*}\n\t */\n\tshowdown.getOption = function (key) {\n\t  'use strict';\n\t  return globalOptions[key];\n\t};\n\t\n\t/**\n\t * Get the global options\n\t * @static\n\t * @returns {{}}\n\t */\n\tshowdown.getOptions = function () {\n\t  'use strict';\n\t  return globalOptions;\n\t};\n\t\n\t/**\n\t * Reset global options to the default values\n\t * @static\n\t */\n\tshowdown.resetOptions = function () {\n\t  'use strict';\n\t  globalOptions = getDefaultOpts(true);\n\t};\n\t\n\t/**\n\t * Set the flavor showdown should use as default\n\t * @param {string} name\n\t */\n\tshowdown.setFlavor = function (name) {\n\t  'use strict';\n\t  if (flavor.hasOwnProperty(name)) {\n\t    var preset = flavor[name];\n\t    for (var option in preset) {\n\t      if (preset.hasOwnProperty(option)) {\n\t        globalOptions[option] = preset[option];\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Get the default options\n\t * @static\n\t * @param {boolean} [simple=true]\n\t * @returns {{}}\n\t */\n\tshowdown.getDefaultOptions = function (simple) {\n\t  'use strict';\n\t  return getDefaultOpts(simple);\n\t};\n\t\n\t/**\n\t * Get or set a subParser\n\t *\n\t * subParser(name)       - Get a registered subParser\n\t * subParser(name, func) - Register a subParser\n\t * @static\n\t * @param {string} name\n\t * @param {function} [func]\n\t * @returns {*}\n\t */\n\tshowdown.subParser = function (name, func) {\n\t  'use strict';\n\t  if (showdown.helper.isString(name)) {\n\t    if (typeof func !== 'undefined') {\n\t      parsers[name] = func;\n\t    } else {\n\t      if (parsers.hasOwnProperty(name)) {\n\t        return parsers[name];\n\t      } else {\n\t        throw Error('SubParser named ' + name + ' not registered!');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Gets or registers an extension\n\t * @static\n\t * @param {string} name\n\t * @param {object|function=} ext\n\t * @returns {*}\n\t */\n\tshowdown.extension = function (name, ext) {\n\t  'use strict';\n\t\n\t  if (!showdown.helper.isString(name)) {\n\t    throw Error('Extension \\'name\\' must be a string');\n\t  }\n\t\n\t  name = showdown.helper.stdExtName(name);\n\t\n\t  // Getter\n\t  if (showdown.helper.isUndefined(ext)) {\n\t    if (!extensions.hasOwnProperty(name)) {\n\t      throw Error('Extension named ' + name + ' is not registered!');\n\t    }\n\t    return extensions[name];\n\t\n\t    // Setter\n\t  } else {\n\t    // Expand extension if it's wrapped in a function\n\t    if (typeof ext === 'function') {\n\t      ext = ext();\n\t    }\n\t\n\t    // Ensure extension is an array\n\t    if (!showdown.helper.isArray(ext)) {\n\t      ext = [ext];\n\t    }\n\t\n\t    var validExtension = validate(ext, name);\n\t\n\t    if (validExtension.valid) {\n\t      extensions[name] = ext;\n\t    } else {\n\t      throw Error(validExtension.error);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Gets all extensions registered\n\t * @returns {{}}\n\t */\n\tshowdown.getAllExtensions = function () {\n\t  'use strict';\n\t  return extensions;\n\t};\n\t\n\t/**\n\t * Remove an extension\n\t * @param {string} name\n\t */\n\tshowdown.removeExtension = function (name) {\n\t  'use strict';\n\t  delete extensions[name];\n\t};\n\t\n\t/**\n\t * Removes all extensions\n\t */\n\tshowdown.resetExtensions = function () {\n\t  'use strict';\n\t  extensions = {};\n\t};\n\t\n\t/**\n\t * Validate extension\n\t * @param {array} extension\n\t * @param {string} name\n\t * @returns {{valid: boolean, error: string}}\n\t */\n\tfunction validate(extension, name) {\n\t  'use strict';\n\t\n\t  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n\t    ret = {\n\t      valid: true,\n\t      error: ''\n\t    };\n\t\n\t  if (!showdown.helper.isArray(extension)) {\n\t    extension = [extension];\n\t  }\n\t\n\t  for (var i = 0; i < extension.length; ++i) {\n\t    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n\t        ext = extension[i];\n\t    if (typeof ext !== 'object') {\n\t      ret.valid = false;\n\t      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n\t      return ret;\n\t    }\n\t\n\t    if (!showdown.helper.isString(ext.type)) {\n\t      ret.valid = false;\n\t      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n\t      return ret;\n\t    }\n\t\n\t    var type = ext.type = ext.type.toLowerCase();\n\t\n\t    // normalize extension type\n\t    if (type === 'language') {\n\t      type = ext.type = 'lang';\n\t    }\n\t\n\t    if (type === 'html') {\n\t      type = ext.type = 'output';\n\t    }\n\t\n\t    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n\t      ret.valid = false;\n\t      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n\t      return ret;\n\t    }\n\t\n\t    if (type === 'listener') {\n\t      if (showdown.helper.isUndefined(ext.listeners)) {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n\t        return ret;\n\t      }\n\t    } else {\n\t      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n\t        return ret;\n\t      }\n\t    }\n\t\n\t    if (ext.listeners) {\n\t      if (typeof ext.listeners !== 'object') {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n\t        return ret;\n\t      }\n\t      for (var ln in ext.listeners) {\n\t        if (ext.listeners.hasOwnProperty(ln)) {\n\t          if (typeof ext.listeners[ln] !== 'function') {\n\t            ret.valid = false;\n\t            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n\t              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n\t            return ret;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (ext.filter) {\n\t      if (typeof ext.filter !== 'function') {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n\t        return ret;\n\t      }\n\t    } else if (ext.regex) {\n\t      if (showdown.helper.isString(ext.regex)) {\n\t        ext.regex = new RegExp(ext.regex, 'g');\n\t      }\n\t      if (!ext.regex instanceof RegExp) {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n\t        return ret;\n\t      }\n\t      if (showdown.helper.isUndefined(ext.replace)) {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n\t        return ret;\n\t      }\n\t    }\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Validate extension\n\t * @param {object} ext\n\t * @returns {boolean}\n\t */\n\tshowdown.validateExtension = function (ext) {\n\t  'use strict';\n\t\n\t  var validateExtension = validate(ext, null);\n\t  if (!validateExtension.valid) {\n\t    console.warn(validateExtension.error);\n\t    return false;\n\t  }\n\t  return true;\n\t};\n\t\r\n\t/**\n\t * showdownjs helper functions\n\t */\n\t\n\tif (!showdown.hasOwnProperty('helper')) {\n\t  showdown.helper = {};\n\t}\n\t\n\t/**\n\t * Check if var is string\n\t * @static\n\t * @param {string} a\n\t * @returns {boolean}\n\t */\n\tshowdown.helper.isString = function isString(a) {\n\t  'use strict';\n\t  return (typeof a === 'string' || a instanceof String);\n\t};\n\t\n\t/**\n\t * Check if var is a function\n\t * @static\n\t * @param {string} a\n\t * @returns {boolean}\n\t */\n\tshowdown.helper.isFunction = function isFunction(a) {\n\t  'use strict';\n\t  var getType = {};\n\t  return a && getType.toString.call(a) === '[object Function]';\n\t};\n\t\n\t/**\n\t * ForEach helper function\n\t * @static\n\t * @param {*} obj\n\t * @param {function} callback\n\t */\n\tshowdown.helper.forEach = function forEach(obj, callback) {\n\t  'use strict';\n\t  if (typeof obj.forEach === 'function') {\n\t    obj.forEach(callback);\n\t  } else {\n\t    for (var i = 0; i < obj.length; i++) {\n\t      callback(obj[i], i, obj);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * isArray helper function\n\t * @static\n\t * @param {*} a\n\t * @returns {boolean}\n\t */\n\tshowdown.helper.isArray = function isArray(a) {\n\t  'use strict';\n\t  return a.constructor === Array;\n\t};\n\t\n\t/**\n\t * Check if value is undefined\n\t * @static\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t */\n\tshowdown.helper.isUndefined = function isUndefined(value) {\n\t  'use strict';\n\t  return typeof value === 'undefined';\n\t};\n\t\n\t/**\n\t * Standardidize extension name\n\t * @static\n\t * @param {string} s extension name\n\t * @returns {string}\n\t */\n\tshowdown.helper.stdExtName = function (s) {\n\t  'use strict';\n\t  return s.replace(/[_-]||\\s/g, '').toLowerCase();\n\t};\n\t\n\tfunction escapeCharactersCallback(wholeMatch, m1) {\n\t  'use strict';\n\t  var charCodeToEscape = m1.charCodeAt(0);\n\t  return '~E' + charCodeToEscape + 'E';\n\t}\n\t\n\t/**\n\t * Callback used to escape characters when passing through String.replace\n\t * @static\n\t * @param {string} wholeMatch\n\t * @param {string} m1\n\t * @returns {string}\n\t */\n\tshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\t\n\t/**\n\t * Escape characters in a string\n\t * @static\n\t * @param {string} text\n\t * @param {string} charsToEscape\n\t * @param {boolean} afterBackslash\n\t * @returns {XML|string|void|*}\n\t */\n\tshowdown.helper.escapeCharacters = function escapeCharacters(text, charsToEscape, afterBackslash) {\n\t  'use strict';\n\t  // First we have to escape the escape characters so that\n\t  // we can build a character class out of them\n\t  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\t\n\t  if (afterBackslash) {\n\t    regexString = '\\\\\\\\' + regexString;\n\t  }\n\t\n\t  var regex = new RegExp(regexString, 'g');\n\t  text = text.replace(regex, escapeCharactersCallback);\n\t\n\t  return text;\n\t};\n\t\n\tvar rgxFindMatchPos = function (str, left, right, flags) {\n\t  'use strict';\n\t  var f = flags || '',\n\t    g = f.indexOf('g') > -1,\n\t    x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n\t    l = new RegExp(left, f.replace(/g/g, '')),\n\t    pos = [],\n\t    t, s, m, start, end;\n\t\n\t  do {\n\t    t = 0;\n\t    while ((m = x.exec(str))) {\n\t      if (l.test(m[0])) {\n\t        if (!(t++)) {\n\t          s = x.lastIndex;\n\t          start = s - m[0].length;\n\t        }\n\t      } else if (t) {\n\t        if (!--t) {\n\t          end = m.index + m[0].length;\n\t          var obj = {\n\t            left: {start: start, end: s},\n\t            match: {start: s, end: m.index},\n\t            right: {start: m.index, end: end},\n\t            wholeMatch: {start: start, end: end}\n\t          };\n\t          pos.push(obj);\n\t          if (!g) {\n\t            return pos;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } while (t && (x.lastIndex = s));\n\t\n\t  return pos;\n\t};\n\t\n\t/**\n\t * matchRecursiveRegExp\n\t *\n\t * (c) 2007 Steven Levithan <stevenlevithan.com>\n\t * MIT License\n\t *\n\t * Accepts a string to search, a left and right format delimiter\n\t * as regex patterns, and optional regex flags. Returns an array\n\t * of matches, allowing nested instances of left/right delimiters.\n\t * Use the \"g\" flag to return all matches, otherwise only the\n\t * first is returned. Be careful to ensure that the left and\n\t * right format delimiters produce mutually exclusive matches.\n\t * Backreferences are not supported within the right delimiter\n\t * due to how it is internally combined with the left delimiter.\n\t * When matching strings whose format delimiters are unbalanced\n\t * to the left or right, the output is intentionally as a\n\t * conventional regex library with recursion support would\n\t * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n\t * \"<\" and \">\" as the delimiters (both strings contain a single,\n\t * balanced instance of \"<x>\").\n\t *\n\t * examples:\n\t * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n\t * returns: []\n\t * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n\t * returns: [\"t<<e>><s>\", \"\"]\n\t * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n\t * returns: [\"test\"]\n\t */\n\tshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n\t  'use strict';\n\t\n\t  var matchPos = rgxFindMatchPos (str, left, right, flags),\n\t    results = [];\n\t\n\t  for (var i = 0; i < matchPos.length; ++i) {\n\t    results.push([\n\t      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n\t      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n\t      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n\t      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n\t    ]);\n\t  }\n\t  return results;\n\t};\n\t\n\t/**\n\t *\n\t * @param {string} str\n\t * @param {string|function} replacement\n\t * @param {string} left\n\t * @param {string} right\n\t * @param {string} flags\n\t * @returns {string}\n\t */\n\tshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n\t  'use strict';\n\t\n\t  if (!showdown.helper.isFunction(replacement)) {\n\t    var repStr = replacement;\n\t    replacement = function () {\n\t      return repStr;\n\t    };\n\t  }\n\t\n\t  var matchPos = rgxFindMatchPos(str, left, right, flags),\n\t      finalStr = str,\n\t      lng = matchPos.length;\n\t\n\t  if (lng > 0) {\n\t    var bits = [];\n\t    if (matchPos[0].wholeMatch.start !== 0) {\n\t      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n\t    }\n\t    for (var i = 0; i < lng; ++i) {\n\t      bits.push(\n\t        replacement(\n\t          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n\t          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n\t          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n\t          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n\t        )\n\t      );\n\t      if (i < lng - 1) {\n\t        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n\t      }\n\t    }\n\t    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n\t      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n\t    }\n\t    finalStr = bits.join('');\n\t  }\n\t  return finalStr;\n\t};\n\t\n\t/**\n\t * POLYFILLS\n\t */\n\tif (showdown.helper.isUndefined(console)) {\n\t  console = {\n\t    warn: function (msg) {\n\t      'use strict';\n\t      alert(msg);\n\t    },\n\t    log: function (msg) {\n\t      'use strict';\n\t      alert(msg);\n\t    },\n\t    error: function (msg) {\n\t      'use strict';\n\t      throw msg;\n\t    }\n\t  };\n\t}\n\t\r\n\t/**\n\t * Created by Estevao on 31-05-2015.\n\t */\n\t\n\t/**\n\t * Showdown Converter class\n\t * @class\n\t * @param {object} [converterOptions]\n\t * @returns {Converter}\n\t */\n\tshowdown.Converter = function (converterOptions) {\n\t  'use strict';\n\t\n\t  var\n\t      /**\n\t       * Options used by this converter\n\t       * @private\n\t       * @type {{}}\n\t       */\n\t      options = {},\n\t\n\t      /**\n\t       * Language extensions used by this converter\n\t       * @private\n\t       * @type {Array}\n\t       */\n\t      langExtensions = [],\n\t\n\t      /**\n\t       * Output modifiers extensions used by this converter\n\t       * @private\n\t       * @type {Array}\n\t       */\n\t      outputModifiers = [],\n\t\n\t      /**\n\t       * Event listeners\n\t       * @private\n\t       * @type {{}}\n\t       */\n\t      listeners = {};\n\t\n\t  _constructor();\n\t\n\t  /**\n\t   * Converter constructor\n\t   * @private\n\t   */\n\t  function _constructor() {\n\t    converterOptions = converterOptions || {};\n\t\n\t    for (var gOpt in globalOptions) {\n\t      if (globalOptions.hasOwnProperty(gOpt)) {\n\t        options[gOpt] = globalOptions[gOpt];\n\t      }\n\t    }\n\t\n\t    // Merge options\n\t    if (typeof converterOptions === 'object') {\n\t      for (var opt in converterOptions) {\n\t        if (converterOptions.hasOwnProperty(opt)) {\n\t          options[opt] = converterOptions[opt];\n\t        }\n\t      }\n\t    } else {\n\t      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n\t      ' was passed instead.');\n\t    }\n\t\n\t    if (options.extensions) {\n\t      showdown.helper.forEach(options.extensions, _parseExtension);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Parse extension\n\t   * @param {*} ext\n\t   * @param {string} [name='']\n\t   * @private\n\t   */\n\t  function _parseExtension(ext, name) {\n\t\n\t    name = name || null;\n\t    // If it's a string, the extension was previously loaded\n\t    if (showdown.helper.isString(ext)) {\n\t      ext = showdown.helper.stdExtName(ext);\n\t      name = ext;\n\t\n\t      // LEGACY_SUPPORT CODE\n\t      if (showdown.extensions[ext]) {\n\t        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n\t          'Please inform the developer that the extension should be updated!');\n\t        legacyExtensionLoading(showdown.extensions[ext], ext);\n\t        return;\n\t      // END LEGACY SUPPORT CODE\n\t\n\t      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n\t        ext = extensions[ext];\n\t\n\t      } else {\n\t        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n\t      }\n\t    }\n\t\n\t    if (typeof ext === 'function') {\n\t      ext = ext();\n\t    }\n\t\n\t    if (!showdown.helper.isArray(ext)) {\n\t      ext = [ext];\n\t    }\n\t\n\t    var validExt = validate(ext, name);\n\t    if (!validExt.valid) {\n\t      throw Error(validExt.error);\n\t    }\n\t\n\t    for (var i = 0; i < ext.length; ++i) {\n\t      switch (ext[i].type) {\n\t\n\t        case 'lang':\n\t          langExtensions.push(ext[i]);\n\t          break;\n\t\n\t        case 'output':\n\t          outputModifiers.push(ext[i]);\n\t          break;\n\t      }\n\t      if (ext[i].hasOwnProperty(listeners)) {\n\t        for (var ln in ext[i].listeners) {\n\t          if (ext[i].listeners.hasOwnProperty(ln)) {\n\t            listen(ln, ext[i].listeners[ln]);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t  }\n\t\n\t  /**\n\t   * LEGACY_SUPPORT\n\t   * @param {*} ext\n\t   * @param {string} name\n\t   */\n\t  function legacyExtensionLoading(ext, name) {\n\t    if (typeof ext === 'function') {\n\t      ext = ext(new showdown.Converter());\n\t    }\n\t    if (!showdown.helper.isArray(ext)) {\n\t      ext = [ext];\n\t    }\n\t    var valid = validate(ext, name);\n\t\n\t    if (!valid.valid) {\n\t      throw Error(valid.error);\n\t    }\n\t\n\t    for (var i = 0; i < ext.length; ++i) {\n\t      switch (ext[i].type) {\n\t        case 'lang':\n\t          langExtensions.push(ext[i]);\n\t          break;\n\t        case 'output':\n\t          outputModifiers.push(ext[i]);\n\t          break;\n\t        default:// should never reach here\n\t          throw Error('Extension loader error: Type unrecognized!!!');\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Listen to an event\n\t   * @param {string} name\n\t   * @param {function} callback\n\t   */\n\t  function listen(name, callback) {\n\t    if (!showdown.helper.isString(name)) {\n\t      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n\t    }\n\t\n\t    if (typeof callback !== 'function') {\n\t      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n\t    }\n\t\n\t    if (!listeners.hasOwnProperty(name)) {\n\t      listeners[name] = [];\n\t    }\n\t    listeners[name].push(callback);\n\t  }\n\t\n\t  function rTrimInputText(text) {\n\t    var rsp = text.match(/^\\s*/)[0].length,\n\t        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n\t    return text.replace(rgx, '');\n\t  }\n\t\n\t  /**\n\t   * Dispatch an event\n\t   * @private\n\t   * @param {string} evtName Event name\n\t   * @param {string} text Text\n\t   * @param {{}} options Converter Options\n\t   * @param {{}} globals\n\t   * @returns {string}\n\t   */\n\t  this._dispatch = function dispatch (evtName, text, options, globals) {\n\t    if (listeners.hasOwnProperty(evtName)) {\n\t      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n\t        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n\t        if (nText && typeof nText !== 'undefined') {\n\t          text = nText;\n\t        }\n\t      }\n\t    }\n\t    return text;\n\t  };\n\t\n\t  /**\n\t   * Listen to an event\n\t   * @param {string} name\n\t   * @param {function} callback\n\t   * @returns {showdown.Converter}\n\t   */\n\t  this.listen = function (name, callback) {\n\t    listen(name, callback);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Converts a markdown string into HTML\n\t   * @param {string} text\n\t   * @returns {*}\n\t   */\n\t  this.makeHtml = function (text) {\n\t    //check if text is not falsy\n\t    if (!text) {\n\t      return text;\n\t    }\n\t\n\t    var globals = {\n\t      gHtmlBlocks:     [],\n\t      gHtmlMdBlocks:   [],\n\t      gHtmlSpans:      [],\n\t      gUrls:           {},\n\t      gTitles:         {},\n\t      gDimensions:     {},\n\t      gListLevel:      0,\n\t      hashLinkCounts:  {},\n\t      langExtensions:  langExtensions,\n\t      outputModifiers: outputModifiers,\n\t      converter:       this,\n\t      ghCodeBlocks:    []\n\t    };\n\t\n\t    // attacklab: Replace ~ with ~T\n\t    // This lets us use tilde as an escape char to avoid md5 hashes\n\t    // The choice of character is arbitrary; anything that isn't\n\t    // magic in Markdown will work.\n\t    text = text.replace(/~/g, '~T');\n\t\n\t    // attacklab: Replace $ with ~D\n\t    // RegExp interprets $ as a special character\n\t    // when it's in a replacement string\n\t    text = text.replace(/\\$/g, '~D');\n\t\n\t    // Standardize line endings\n\t    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n\t    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\t\n\t    if (options.smartIndentationFix) {\n\t      text = rTrimInputText(text);\n\t    }\n\t\n\t    // Make sure text begins and ends with a couple of newlines:\n\t    text = '\\n\\n' + text + '\\n\\n';\n\t\n\t    // detab\n\t    text = showdown.subParser('detab')(text, options, globals);\n\t\n\t    // stripBlankLines\n\t    text = showdown.subParser('stripBlankLines')(text, options, globals);\n\t\n\t    //run languageExtensions\n\t    showdown.helper.forEach(langExtensions, function (ext) {\n\t      text = showdown.subParser('runExtension')(ext, text, options, globals);\n\t    });\n\t\n\t    // run the sub parsers\n\t    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n\t    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n\t    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n\t    text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\t    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n\t    text = showdown.subParser('blockGamut')(text, options, globals);\n\t    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n\t    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\t\n\t    // attacklab: Restore dollar signs\n\t    text = text.replace(/~D/g, '$$');\n\t\n\t    // attacklab: Restore tildes\n\t    text = text.replace(/~T/g, '~');\n\t\n\t    // Run output modifiers\n\t    showdown.helper.forEach(outputModifiers, function (ext) {\n\t      text = showdown.subParser('runExtension')(ext, text, options, globals);\n\t    });\n\t\n\t    return text;\n\t  };\n\t\n\t  /**\n\t   * Set an option of this Converter instance\n\t   * @param {string} key\n\t   * @param {*} value\n\t   */\n\t  this.setOption = function (key, value) {\n\t    options[key] = value;\n\t  };\n\t\n\t  /**\n\t   * Get the option of this Converter instance\n\t   * @param {string} key\n\t   * @returns {*}\n\t   */\n\t  this.getOption = function (key) {\n\t    return options[key];\n\t  };\n\t\n\t  /**\n\t   * Get the options of this Converter instance\n\t   * @returns {{}}\n\t   */\n\t  this.getOptions = function () {\n\t    return options;\n\t  };\n\t\n\t  /**\n\t   * Add extension to THIS converter\n\t   * @param {{}} extension\n\t   * @param {string} [name=null]\n\t   */\n\t  this.addExtension = function (extension, name) {\n\t    name = name || null;\n\t    _parseExtension(extension, name);\n\t  };\n\t\n\t  /**\n\t   * Use a global registered extension with THIS converter\n\t   * @param {string} extensionName Name of the previously registered extension\n\t   */\n\t  this.useExtension = function (extensionName) {\n\t    _parseExtension(extensionName);\n\t  };\n\t\n\t  /**\n\t   * Set the flavor THIS converter should use\n\t   * @param {string} name\n\t   */\n\t  this.setFlavor = function (name) {\n\t    if (flavor.hasOwnProperty(name)) {\n\t      var preset = flavor[name];\n\t      for (var option in preset) {\n\t        if (preset.hasOwnProperty(option)) {\n\t          options[option] = preset[option];\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove an extension from THIS converter.\n\t   * Note: This is a costly operation. It's better to initialize a new converter\n\t   * and specify the extensions you wish to use\n\t   * @param {Array} extension\n\t   */\n\t  this.removeExtension = function (extension) {\n\t    if (!showdown.helper.isArray(extension)) {\n\t      extension = [extension];\n\t    }\n\t    for (var a = 0; a < extension.length; ++a) {\n\t      var ext = extension[a];\n\t      for (var i = 0; i < langExtensions.length; ++i) {\n\t        if (langExtensions[i] === ext) {\n\t          langExtensions[i].splice(i, 1);\n\t        }\n\t      }\n\t      for (var ii = 0; ii < outputModifiers.length; ++i) {\n\t        if (outputModifiers[ii] === ext) {\n\t          outputModifiers[ii].splice(i, 1);\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get all extension of THIS converter\n\t   * @returns {{language: Array, output: Array}}\n\t   */\n\t  this.getAllExtensions = function () {\n\t    return {\n\t      language: langExtensions,\n\t      output: outputModifiers\n\t    };\n\t  };\n\t};\n\t\r\n\t/**\n\t * Turn Markdown link shortcuts into XHTML <a> tags.\n\t */\n\tshowdown.subParser('anchors', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\t\n\t  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n\t    if (showdown.helper.isUndefined(m7)) {\n\t      m7 = '';\n\t    }\n\t    wholeMatch = m1;\n\t    var linkText = m2,\n\t        linkId = m3.toLowerCase(),\n\t        url = m4,\n\t        title = m7;\n\t\n\t    if (!url) {\n\t      if (!linkId) {\n\t        // lower-case and turn embedded newlines into spaces\n\t        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n\t      }\n\t      url = '#' + linkId;\n\t\n\t      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n\t        url = globals.gUrls[linkId];\n\t        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n\t          title = globals.gTitles[linkId];\n\t        }\n\t      } else {\n\t        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n\t          // Special case for explicit empty url\n\t          url = '';\n\t        } else {\n\t          return wholeMatch;\n\t        }\n\t      }\n\t    }\n\t\n\t    url = showdown.helper.escapeCharacters(url, '*_', false);\n\t    var result = '<a href=\"' + url + '\"';\n\t\n\t    if (title !== '' && title !== null) {\n\t      title = title.replace(/\"/g, '&quot;');\n\t      title = showdown.helper.escapeCharacters(title, '*_', false);\n\t      result += ' title=\"' + title + '\"';\n\t    }\n\t\n\t    result += '>' + linkText + '</a>';\n\t\n\t    return result;\n\t  };\n\t\n\t  // First, handle reference-style links: [link text] [id]\n\t  /*\n\t   text = text.replace(/\n\t   (\t\t\t\t\t\t\t// wrap whole match in $1\n\t   \\[\n\t   (\n\t   (?:\n\t   \\[[^\\]]*\\]\t\t// allow brackets nested one level\n\t   |\n\t   [^\\[]\t\t\t// or anything else\n\t   )*\n\t   )\n\t   \\]\n\t\n\t   [ ]?\t\t\t\t\t// one optional space\n\t   (?:\\n[ ]*)?\t\t\t\t// one optional newline followed by spaces\n\t\n\t   \\[\n\t   (.*?)\t\t\t\t\t// id = $3\n\t   \\]\n\t   )()()()()\t\t\t\t\t// pad remaining backreferences\n\t   /g,_DoAnchors_callback);\n\t   */\n\t  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\t\n\t  //\n\t  // Next, inline-style links: [link text](url \"optional title\")\n\t  //\n\t\n\t  /*\n\t   text = text.replace(/\n\t   (\t\t\t\t\t\t// wrap whole match in $1\n\t   \\[\n\t   (\n\t   (?:\n\t   \\[[^\\]]*\\]\t// allow brackets nested one level\n\t   |\n\t   [^\\[\\]]\t\t\t// or anything else\n\t   )\n\t   )\n\t   \\]\n\t   \\(\t\t\t\t\t\t// literal paren\n\t   [ \\t]*\n\t   ()\t\t\t\t\t\t// no id, so leave $3 empty\n\t   <?(.*?)>?\t\t\t\t// href = $4\n\t   [ \\t]*\n\t   (\t\t\t\t\t\t// $5\n\t   (['\"])\t\t\t\t// quote char = $6\n\t   (.*?)\t\t\t\t// Title = $7\n\t   \\6\t\t\t\t\t// matching quote\n\t   [ \\t]*\t\t\t\t// ignore any spaces/tabs between closing quote and )\n\t   )?\t\t\t\t\t\t// title is optional\n\t   \\)\n\t   )\n\t   /g,writeAnchorTag);\n\t   */\n\t  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n\t                      writeAnchorTag);\n\t\n\t  //\n\t  // Last, handle reference-style shortcuts: [link text]\n\t  // These must come last in case you've also got [link test][1]\n\t  // or [link test](/foo)\n\t  //\n\t\n\t  /*\n\t   text = text.replace(/\n\t   (                // wrap whole match in $1\n\t   \\[\n\t   ([^\\[\\]]+)       // link text = $2; can't contain '[' or ']'\n\t   \\]\n\t   )()()()()()      // pad rest of backreferences\n\t   /g, writeAnchorTag);\n\t   */\n\t  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\t\n\t  text = globals.converter._dispatch('anchors.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\tshowdown.subParser('autoLinks', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\t\n\t  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)(?=\\s|$)(?![\"<>])/gi,\n\t      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n\t      simpleMailRegex = /(?:^|[ \\n\\t])([A-Za-z0-9!#$%&'*+-/=?^_`\\{|}~\\.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|[ \\n\\t])/gi,\n\t      delimMailRegex  = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\t\n\t  text = text.replace(delimUrlRegex, '<a href=\\\"$1\\\">$1</a>');\n\t  text = text.replace(delimMailRegex, replaceMail);\n\t  //simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n\t  // Email addresses: <address@domain.foo>\n\t\n\t  if (options.simplifiedAutoLink) {\n\t    text = text.replace(simpleURLRegex, '<a href=\\\"$1\\\">$1</a>');\n\t    text = text.replace(simpleMailRegex, replaceMail);\n\t  }\n\t\n\t  function replaceMail(wholeMatch, m1) {\n\t    var unescapedStr = showdown.subParser('unescapeSpecialChars')(m1);\n\t    return showdown.subParser('encodeEmailAddress')(unescapedStr);\n\t  }\n\t\n\t  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * These are all the transformations that form block-level\n\t * tags like paragraphs, headers, and list items.\n\t */\n\tshowdown.subParser('blockGamut', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\t\n\t  // we parse blockquotes first so that we can have headings and hrs\n\t  // inside blockquotes\n\t  text = showdown.subParser('blockQuotes')(text, options, globals);\n\t  text = showdown.subParser('headers')(text, options, globals);\n\t\n\t  // Do Horizontal Rules:\n\t  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n\t  text = text.replace(/^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$/gm, key);\n\t  text = text.replace(/^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$/gm, key);\n\t  text = text.replace(/^[ ]{0,2}([ ]?_[ ]?){3,}[ \\t]*$/gm, key);\n\t\n\t  text = showdown.subParser('lists')(text, options, globals);\n\t  text = showdown.subParser('codeBlocks')(text, options, globals);\n\t  text = showdown.subParser('tables')(text, options, globals);\n\t\n\t  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n\t  // was to escape raw HTML in the original Markdown source. This time,\n\t  // we're escaping the markup we've just created, so that we don't wrap\n\t  // <p> tags around block-level tags.\n\t  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n\t  text = showdown.subParser('paragraphs')(text, options, globals);\n\t\n\t  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\t\n\t  return text;\n\t});\n\t\r\n\tshowdown.subParser('blockQuotes', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\t  /*\n\t   text = text.replace(/\n\t   (\t\t\t\t\t\t\t\t// Wrap whole match in $1\n\t   (\n\t   ^[ \\t]*>[ \\t]?\t\t\t// '>' at the start of a line\n\t   .+\\n\t\t\t\t\t// rest of the first line\n\t   (.+\\n)*\t\t\t\t\t// subsequent consecutive lines\n\t   \\n*\t\t\t\t\t\t// blanks\n\t   )+\n\t   )\n\t   /gm, function(){...});\n\t   */\n\t\n\t  text = text.replace(/((^[ \\t]{0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n\t    var bq = m1;\n\t\n\t    // attacklab: hack around Konqueror 3.5.4 bug:\n\t    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\t    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0'); // trim one level of quoting\n\t\n\t    // attacklab: clean up hack\n\t    bq = bq.replace(/~0/g, '');\n\t\n\t    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n\t    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n\t    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\t\n\t    bq = bq.replace(/(^|\\n)/g, '$1  ');\n\t    // These leading spaces screw with <pre> content, so we need to fix that:\n\t    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n\t      var pre = m1;\n\t      // attacklab: hack around Konqueror 3.5.4 bug:\n\t      pre = pre.replace(/^  /mg, '~0');\n\t      pre = pre.replace(/~0/g, '');\n\t      return pre;\n\t    });\n\t\n\t    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n\t  });\n\t\n\t  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Process Markdown `<pre><code>` blocks.\n\t */\n\tshowdown.subParser('codeBlocks', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\t  /*\n\t   text = text.replace(text,\n\t   /(?:\\n\\n|^)\n\t   (\t\t\t\t\t\t\t\t// $1 = the code block -- one or more lines, starting with a space/tab\n\t   (?:\n\t   (?:[ ]{4}|\\t)\t\t\t// Lines must start with a tab or a tab-width of spaces - attacklab: g_tab_width\n\t   .*\\n+\n\t   )+\n\t   )\n\t   (\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))\t// attacklab: g_tab_width\n\t   /g,function(){...});\n\t   */\n\t\n\t  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\t  text += '~0';\n\t\n\t  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g;\n\t  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n\t    var codeblock = m1,\n\t        nextChar = m2,\n\t        end = '\\n';\n\t\n\t    codeblock = showdown.subParser('outdent')(codeblock);\n\t    codeblock = showdown.subParser('encodeCode')(codeblock);\n\t    codeblock = showdown.subParser('detab')(codeblock);\n\t    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n\t    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\t\n\t    if (options.omitExtraWLInCodeBlocks) {\n\t      end = '';\n\t    }\n\t\n\t    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\t\n\t    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n\t  });\n\t\n\t  // attacklab: strip sentinel\n\t  text = text.replace(/~0/, '');\n\t\n\t  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\t/**\n\t *\n\t *   *  Backtick quotes are used for <code></code> spans.\n\t *\n\t *   *  You can use multiple backticks as the delimiters if you want to\n\t *     include literal backticks in the code span. So, this input:\n\t *\n\t *         Just type ``foo `bar` baz`` at the prompt.\n\t *\n\t *       Will translate to:\n\t *\n\t *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n\t *\n\t *    There's no arbitrary limit to the number of backticks you\n\t *    can use as delimters. If you need three consecutive backticks\n\t *    in your code, use four for delimiters, etc.\n\t *\n\t *  *  You can use spaces to get literal backticks at the edges:\n\t *\n\t *         ... type `` `bar` `` ...\n\t *\n\t *       Turns to:\n\t *\n\t *         ... type <code>`bar`</code> ...\n\t */\n\tshowdown.subParser('codeSpans', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\t\n\t  /*\n\t   text = text.replace(/\n\t   (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n\t   (`+)\t\t\t\t\t\t// $2 = Opening run of `\n\t   (\t\t\t\t\t\t\t// $3 = The code block\n\t   [^\\r]*?\n\t   [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n\t   )\n\t   \\2\t\t\t\t\t\t\t// Matching closer\n\t   (?!`)\n\t   /gm, function(){...});\n\t   */\n\t\n\t  if (typeof(text) === 'undefined') {\n\t    text = '';\n\t  }\n\t  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n\t    function (wholeMatch, m1, m2, m3) {\n\t      var c = m3;\n\t      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n\t      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n\t      c = showdown.subParser('encodeCode')(c);\n\t      return m1 + '<code>' + c + '</code>';\n\t    }\n\t  );\n\t\n\t  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Convert all tabs to spaces\n\t */\n\tshowdown.subParser('detab', function (text) {\n\t  'use strict';\n\t\n\t  // expand first n-1 tabs\n\t  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\t\n\t  // replace the nth with two sentinels\n\t  text = text.replace(/\\t/g, '~A~B');\n\t\n\t  // use the sentinel to anchor our regex so it doesn't explode\n\t  text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n\t    var leadingText = m1,\n\t        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\t\n\t    // there *must* be a better way to do this:\n\t    for (var i = 0; i < numSpaces; i++) {\n\t      leadingText += ' ';\n\t    }\n\t\n\t    return leadingText;\n\t  });\n\t\n\t  // clean up sentinels\n\t  text = text.replace(/~A/g, '    ');  // g_tab_width\n\t  text = text.replace(/~B/g, '');\n\t\n\t  return text;\n\t\n\t});\n\t\r\n\t/**\n\t * Smart processing for ampersands and angle brackets that need to be encoded.\n\t */\n\tshowdown.subParser('encodeAmpsAndAngles', function (text) {\n\t  'use strict';\n\t  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n\t  // http://bumppo.net/projects/amputator/\n\t  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\t\n\t  // Encode naked <'s\n\t  text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;');\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Returns the string, with after processing the following backslash escape sequences.\n\t *\n\t * attacklab: The polite way to do this is with the new escapeCharacters() function:\n\t *\n\t *    text = escapeCharacters(text,\"\\\\\",true);\n\t *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n\t *\n\t * ...but we're sidestepping its use of the (slow) RegExp constructor\n\t * as an optimization for Firefox.  This function gets called a LOT.\n\t */\n\tshowdown.subParser('encodeBackslashEscapes', function (text) {\n\t  'use strict';\n\t  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n\t  text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback);\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Encode/escape certain characters inside Markdown code runs.\n\t * The point is that in code, these characters are literals,\n\t * and lose their special Markdown meanings.\n\t */\n\tshowdown.subParser('encodeCode', function (text) {\n\t  'use strict';\n\t\n\t  // Encode all ampersands; HTML entities are not\n\t  // entities within a Markdown code span.\n\t  text = text.replace(/&/g, '&amp;');\n\t\n\t  // Do the angle bracket song and dance:\n\t  text = text.replace(/</g, '&lt;');\n\t  text = text.replace(/>/g, '&gt;');\n\t\n\t  // Now, escape characters that are magic in Markdown:\n\t  text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false);\n\t\n\t  // jj the line above breaks this:\n\t  //---\n\t  //* Item\n\t  //   1. Subitem\n\t  //            special char: *\n\t  // ---\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t *  Input: an email address, e.g. \"foo@example.com\"\n\t *\n\t *  Output: the email address as a mailto link, with each character\n\t *    of the address encoded as either a decimal or hex entity, in\n\t *    the hopes of foiling most address harvesting spam bots. E.g.:\n\t *\n\t *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n\t *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n\t *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n\t *\n\t *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n\t *  mailing list: <http://tinyurl.com/yu7ue>\n\t *\n\t */\n\tshowdown.subParser('encodeEmailAddress', function (addr) {\n\t  'use strict';\n\t\n\t  var encode = [\n\t    function (ch) {\n\t      return '&#' + ch.charCodeAt(0) + ';';\n\t    },\n\t    function (ch) {\n\t      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n\t    },\n\t    function (ch) {\n\t      return ch;\n\t    }\n\t  ];\n\t\n\t  addr = 'mailto:' + addr;\n\t\n\t  addr = addr.replace(/./g, function (ch) {\n\t    if (ch === '@') {\n\t      // this *must* be encoded. I insist.\n\t      ch = encode[Math.floor(Math.random() * 2)](ch);\n\t    } else if (ch !== ':') {\n\t      // leave ':' alone (to spot mailto: later)\n\t      var r = Math.random();\n\t      // roughly 10% raw, 45% hex, 45% dec\n\t      ch = (\n\t        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n\t      );\n\t    }\n\t    return ch;\n\t  });\n\t\n\t  addr = '<a href=\"' + addr + '\">' + addr + '</a>';\n\t  addr = addr.replace(/\">.+:/g, '\">'); // strip the mailto: from the visible part\n\t\n\t  return addr;\n\t});\n\t\r\n\t/**\n\t * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n\t * don't conflict with their use in Markdown for code, italics and strong.\n\t */\n\tshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n\t  'use strict';\n\t\n\t  // Build a regex to find HTML tags and comments.  See Friedl's\n\t  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n\t  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\t\n\t  text = text.replace(regex, function (wholeMatch) {\n\t    var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`');\n\t    tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false);\n\t    return tag;\n\t  });\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Handle github codeblocks prior to running HashHTML so that\n\t * HTML contained within the codeblock gets escaped properly\n\t * Example:\n\t * ```ruby\n\t *     def hello_world(x)\n\t *       puts \"Hello, #{x}\"\n\t *     end\n\t * ```\n\t */\n\tshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  // early exit if option is not enabled\n\t  if (!options.ghCodeBlocks) {\n\t    return text;\n\t  }\n\t\n\t  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\t\n\t  text += '~0';\n\t\n\t  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n\t    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\t\n\t    // First parse the github code block\n\t    codeblock = showdown.subParser('encodeCode')(codeblock);\n\t    codeblock = showdown.subParser('detab')(codeblock);\n\t    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n\t    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\t\n\t    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\t\n\t    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\t\n\t    // Since GHCodeblocks can be false positives, we need to\n\t    // store the primitive text and the parsed text in a global var,\n\t    // and then return a token\n\t    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n\t  });\n\t\n\t  // attacklab: strip sentinel\n\t  text = text.replace(/~0/, '');\n\t\n\t  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n\t});\n\t\r\n\tshowdown.subParser('hashBlock', function (text, options, globals) {\n\t  'use strict';\n\t  text = text.replace(/(^\\n+|\\n+$)/g, '');\n\t  return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n\t});\n\t\r\n\tshowdown.subParser('hashElement', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  return function (wholeMatch, m1) {\n\t    var blockText = m1;\n\t\n\t    // Undo double lines\n\t    blockText = blockText.replace(/\\n\\n/g, '\\n');\n\t    blockText = blockText.replace(/^\\n/, '');\n\t\n\t    // strip trailing blank lines\n\t    blockText = blockText.replace(/\\n+$/g, '');\n\t\n\t    // Replace the element text with a marker (\"~KxK\" where x is its key)\n\t    blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\t\n\t    return blockText;\n\t  };\n\t});\n\t\r\n\tshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  var blockTags = [\n\t      'pre',\n\t      'div',\n\t      'h1',\n\t      'h2',\n\t      'h3',\n\t      'h4',\n\t      'h5',\n\t      'h6',\n\t      'blockquote',\n\t      'table',\n\t      'dl',\n\t      'ol',\n\t      'ul',\n\t      'script',\n\t      'noscript',\n\t      'form',\n\t      'fieldset',\n\t      'iframe',\n\t      'math',\n\t      'style',\n\t      'section',\n\t      'header',\n\t      'footer',\n\t      'nav',\n\t      'article',\n\t      'aside',\n\t      'address',\n\t      'audio',\n\t      'canvas',\n\t      'figure',\n\t      'hgroup',\n\t      'output',\n\t      'video',\n\t      'p'\n\t    ],\n\t    repFunc = function (wholeMatch, match, left, right) {\n\t      var txt = wholeMatch;\n\t      // check if this html element is marked as markdown\n\t      // if so, it's contents should be parsed as markdown\n\t      if (left.search(/\\bmarkdown\\b/) !== -1) {\n\t        txt = left + globals.converter.makeHtml(match) + right;\n\t      }\n\t      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n\t    };\n\t\n\t  for (var i = 0; i < blockTags.length; ++i) {\n\t    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^(?: |\\\\t){0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n\t  }\n\t\n\t  // HR SPECIAL CASE\n\t  text = text.replace(/(\\n[ ]{0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n\t    showdown.subParser('hashElement')(text, options, globals));\n\t\n\t  // Special case for standalone HTML comments:\n\t  text = text.replace(/(<!(--[^\\r]*?--\\s*)+>[ \\t]*(?=\\n{2,}))/g,\n\t    showdown.subParser('hashElement')(text, options, globals));\n\t\n\t  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n\t  text = text.replace(/(?:\\n\\n)([ ]{0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n\t    showdown.subParser('hashElement')(text, options, globals));\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Hash span elements that should not be parsed as markdown\n\t */\n\tshowdown.subParser('hashHTMLSpans', function (text, config, globals) {\n\t  'use strict';\n\t\n\t  var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');\n\t\n\t  for (var i = 0; i < matches.length; ++i) {\n\t    text = text.replace(matches[i][0], '~L' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'L');\n\t  }\n\t  return text;\n\t});\n\t\n\t/**\n\t * Unhash HTML spans\n\t */\n\tshowdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n\t  'use strict';\n\t\n\t  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n\t    text = text.replace('~L' + i + 'L', globals.gHtmlSpans[i]);\n\t  }\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Hash span elements that should not be parsed as markdown\n\t */\n\tshowdown.subParser('hashPreCodeTags', function (text, config, globals) {\n\t  'use strict';\n\t\n\t  var repFunc = function (wholeMatch, match, left, right) {\n\t    // encode html entities\n\t    var codeblock = left + showdown.subParser('encodeCode')(match) + right;\n\t    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n\t  };\n\t\n\t  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^(?: |\\\\t){0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^(?: |\\\\t){0,3}</code>\\\\s*</pre>', 'gim');\n\t  return text;\n\t});\n\t\r\n\tshowdown.subParser('headers', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('headers.before', text, options, globals);\n\t\n\t  var prefixHeader = options.prefixHeaderId,\n\t      headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\t\n\t  // Set text-style headers:\n\t  //\tHeader 1\n\t  //\t========\n\t  //\n\t  //\tHeader 2\n\t  //\t--------\n\t  //\n\t      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n\t      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\t\n\t  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\t\n\t    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n\t        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n\t        hLevel = headerLevelStart,\n\t        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n\t    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n\t  });\n\t\n\t  text = text.replace(setextRegexH2, function (matchFound, m1) {\n\t    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n\t        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n\t        hLevel = headerLevelStart + 1,\n\t      hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n\t    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n\t  });\n\t\n\t  // atx-style headers:\n\t  //  # Header 1\n\t  //  ## Header 2\n\t  //  ## Header 2 with closing hashes ##\n\t  //  ...\n\t  //  ###### Header 6\n\t  //\n\t  text = text.replace(/^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm, function (wholeMatch, m1, m2) {\n\t    var span = showdown.subParser('spanGamut')(m2, options, globals),\n\t        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n\t        hLevel = headerLevelStart - 1 + m1.length,\n\t        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\t\n\t    return showdown.subParser('hashBlock')(header, options, globals);\n\t  });\n\t\n\t  function headerId(m) {\n\t    var title, escapedId = m.replace(/[^\\w]/g, '').toLowerCase();\n\t\n\t    if (globals.hashLinkCounts[escapedId]) {\n\t      title = escapedId + '-' + (globals.hashLinkCounts[escapedId]++);\n\t    } else {\n\t      title = escapedId;\n\t      globals.hashLinkCounts[escapedId] = 1;\n\t    }\n\t\n\t    // Prefix id to prevent causing inadvertent pre-existing style matches.\n\t    if (prefixHeader === true) {\n\t      prefixHeader = 'section';\n\t    }\n\t\n\t    if (showdown.helper.isString(prefixHeader)) {\n\t      return prefixHeader + title;\n\t    }\n\t    return title;\n\t  }\n\t\n\t  text = globals.converter._dispatch('headers.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Turn Markdown image shortcuts into <img> tags.\n\t */\n\tshowdown.subParser('images', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('images.before', text, options, globals);\n\t\n\t  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n\t      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\t\n\t  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\t\n\t    var gUrls   = globals.gUrls,\n\t        gTitles = globals.gTitles,\n\t        gDims   = globals.gDimensions;\n\t\n\t    linkId = linkId.toLowerCase();\n\t\n\t    if (!title) {\n\t      title = '';\n\t    }\n\t\n\t    if (url === '' || url === null) {\n\t      if (linkId === '' || linkId === null) {\n\t        // lower-case and turn embedded newlines into spaces\n\t        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n\t      }\n\t      url = '#' + linkId;\n\t\n\t      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n\t        url = gUrls[linkId];\n\t        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n\t          title = gTitles[linkId];\n\t        }\n\t        if (!showdown.helper.isUndefined(gDims[linkId])) {\n\t          width = gDims[linkId].width;\n\t          height = gDims[linkId].height;\n\t        }\n\t      } else {\n\t        return wholeMatch;\n\t      }\n\t    }\n\t\n\t    altText = altText.replace(/\"/g, '&quot;');\n\t    altText = showdown.helper.escapeCharacters(altText, '*_', false);\n\t    url = showdown.helper.escapeCharacters(url, '*_', false);\n\t    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\t\n\t    if (title) {\n\t      title = title.replace(/\"/g, '&quot;');\n\t      title = showdown.helper.escapeCharacters(title, '*_', false);\n\t      result += ' title=\"' + title + '\"';\n\t    }\n\t\n\t    if (width && height) {\n\t      width  = (width === '*') ? 'auto' : width;\n\t      height = (height === '*') ? 'auto' : height;\n\t\n\t      result += ' width=\"' + width + '\"';\n\t      result += ' height=\"' + height + '\"';\n\t    }\n\t\n\t    result += ' />';\n\t\n\t    return result;\n\t  }\n\t\n\t  // First, handle reference-style labeled images: ![alt text][id]\n\t  text = text.replace(referenceRegExp, writeImageTag);\n\t\n\t  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n\t  text = text.replace(inlineRegExp, writeImageTag);\n\t\n\t  text = globals.converter._dispatch('images.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\tshowdown.subParser('italicsAndBold', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\t\n\t  if (options.literalMidWordUnderscores) {\n\t    //underscores\n\t    // Since we are consuming a \\s character, we need to add it\n\t    text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([^]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>');\n\t    text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([^]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>');\n\t    //asterisks\n\t    text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>');\n\t    text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\t\n\t  } else {\n\t    // <strong> must go first:\n\t    text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>');\n\t    text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\t  }\n\t\n\t  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Form HTML ordered (numbered) and unordered (bulleted) lists.\n\t */\n\tshowdown.subParser('lists', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('lists.before', text, options, globals);\n\t  /**\n\t   * Process the contents of a single ordered or unordered list, splitting it\n\t   * into individual list items.\n\t   * @param {string} listStr\n\t   * @param {boolean} trimTrailing\n\t   * @returns {string}\n\t   */\n\t  function processListItems (listStr, trimTrailing) {\n\t    // The $g_list_level global keeps track of when we're inside a list.\n\t    // Each time we enter a list, we increment it; when we leave a list,\n\t    // we decrement. If it's zero, we're not in a list anymore.\n\t    //\n\t    // We do this because when we're not inside a list, we want to treat\n\t    // something like this:\n\t    //\n\t    //    I recommend upgrading to version\n\t    //    8. Oops, now this line is treated\n\t    //    as a sub-list.\n\t    //\n\t    // As a single paragraph, despite the fact that the second line starts\n\t    // with a digit-period-space sequence.\n\t    //\n\t    // Whereas when we're inside a list (or sub-list), that line will be\n\t    // treated as the start of a sub-list. What a kludge, huh? This is\n\t    // an aspect of Markdown's syntax that's hard to parse perfectly\n\t    // without resorting to mind-reading. Perhaps the solution is to\n\t    // change the syntax rules such that sub-lists must start with a\n\t    // starting cardinal number; e.g. \"1.\" or \"a.\".\n\t    globals.gListLevel++;\n\t\n\t    // trim trailing blank lines:\n\t    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\t\n\t    // attacklab: add sentinel to emulate \\z\n\t    listStr += '~0';\n\t\n\t    var rgx = /(\\n)?(^[ \\t]*)([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm,\n\t        isParagraphed = (/\\n[ \\t]*\\n(?!~0)/.test(listStr));\n\t\n\t    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n\t      checked = (checked && checked.trim() !== '');\n\t      var item = showdown.subParser('outdent')(m4, options, globals),\n\t          bulletStyle = '';\n\t\n\t      // Support for github tasklists\n\t      if (taskbtn && options.tasklists) {\n\t        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n\t        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n\t          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n\t          if (checked) {\n\t            otp += ' checked';\n\t          }\n\t          otp += '>';\n\t          return otp;\n\t        });\n\t      }\n\t      // m1 - Leading line or\n\t      // Has a double return (multi paragraph) or\n\t      // Has sublist\n\t      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n\t        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n\t        item = showdown.subParser('blockGamut')(item, options, globals);\n\t      } else {\n\t        // Recursion for sub-lists:\n\t        item = showdown.subParser('lists')(item, options, globals);\n\t        item = item.replace(/\\n$/, ''); // chomp(item)\n\t        if (isParagraphed) {\n\t          item = showdown.subParser('paragraphs')(item, options, globals);\n\t        } else {\n\t          item = showdown.subParser('spanGamut')(item, options, globals);\n\t        }\n\t      }\n\t      item =  '\\n<li' + bulletStyle + '>' + item + '</li>\\n';\n\t      return item;\n\t    });\n\t\n\t    // attacklab: strip sentinel\n\t    listStr = listStr.replace(/~0/g, '');\n\t\n\t    globals.gListLevel--;\n\t\n\t    if (trimTrailing) {\n\t      listStr = listStr.replace(/\\s+$/, '');\n\t    }\n\t\n\t    return listStr;\n\t  }\n\t\n\t  /**\n\t   * Check and parse consecutive lists (better fix for issue #142)\n\t   * @param {string} list\n\t   * @param {string} listType\n\t   * @param {boolean} trimTrailing\n\t   * @returns {string}\n\t   */\n\t  function parseConsecutiveLists(list, listType, trimTrailing) {\n\t    // check if we caught 2 or more consecutive lists by mistake\n\t    // we use the counterRgx, meaning if listType is UL we look for UL and vice versa\n\t    var counterRxg = (listType === 'ul') ? /^ {0,2}\\d+\\.[ \\t]/gm : /^ {0,2}[*+-][ \\t]/gm,\n\t      subLists = [],\n\t      result = '';\n\t\n\t    if (list.search(counterRxg) !== -1) {\n\t      (function parseCL(txt) {\n\t        var pos = txt.search(counterRxg);\n\t        if (pos !== -1) {\n\t          // slice\n\t          result += '\\n\\n<' + listType + '>' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n\\n';\n\t\n\t          // invert counterType and listType\n\t          listType = (listType === 'ul') ? 'ol' : 'ul';\n\t          counterRxg = (listType === 'ul') ? /^ {0,2}\\d+\\.[ \\t]/gm : /^ {0,2}[*+-][ \\t]/gm;\n\t\n\t          //recurse\n\t          parseCL(txt.slice(pos));\n\t        } else {\n\t          result += '\\n\\n<' + listType + '>' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n\\n';\n\t        }\n\t      })(list);\n\t      for (var i = 0; i < subLists.length; ++i) {\n\t\n\t      }\n\t    } else {\n\t      result = '\\n\\n<' + listType + '>' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n\\n';\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  // attacklab: add sentinel to hack around khtml/safari bug:\n\t  // http://bugs.webkit.org/show_bug.cgi?id=11231\n\t  text += '~0';\n\t\n\t  // Re-usable pattern to match any entire ul or ol list:\n\t  var wholeList = /^(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm;\n\t\n\t  if (globals.gListLevel) {\n\t    text = text.replace(wholeList, function (wholeMatch, list, m2) {\n\t      var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n\t      return parseConsecutiveLists(list, listType, true);\n\t    });\n\t  } else {\n\t    wholeList = /(\\n\\n|^\\n?)(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm;\n\t    //wholeList = /(\\n\\n|^\\n?)( {0,3}([*+-]|\\d+\\.)[ \\t]+[\\s\\S]+?)(?=(~0)|(\\n\\n(?!\\t| {2,}| {0,3}([*+-]|\\d+\\.)[ \\t])))/g;\n\t    text = text.replace(wholeList, function (wholeMatch, m1, list, m3) {\n\t\n\t      var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n\t      return parseConsecutiveLists(list, listType);\n\t    });\n\t  }\n\t\n\t  // attacklab: strip sentinel\n\t  text = text.replace(/~0/, '');\n\t\n\t  text = globals.converter._dispatch('lists.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Remove one level of line-leading tabs or spaces\n\t */\n\tshowdown.subParser('outdent', function (text) {\n\t  'use strict';\n\t\n\t  // attacklab: hack around Konqueror 3.5.4 bug:\n\t  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\t  text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0'); // attacklab: g_tab_width\n\t\n\t  // attacklab: clean up hack\n\t  text = text.replace(/~0/g, '');\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t *\n\t */\n\tshowdown.subParser('paragraphs', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n\t  // Strip leading and trailing lines:\n\t  text = text.replace(/^\\n+/g, '');\n\t  text = text.replace(/\\n+$/g, '');\n\t\n\t  var grafs = text.split(/\\n{2,}/g),\n\t      grafsOut = [],\n\t      end = grafs.length; // Wrap <p> tags\n\t\n\t  for (var i = 0; i < end; i++) {\n\t    var str = grafs[i];\n\t    // if this is an HTML marker, copy it\n\t    if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n\t      grafsOut.push(str);\n\t    } else {\n\t      str = showdown.subParser('spanGamut')(str, options, globals);\n\t      str = str.replace(/^([ \\t]*)/g, '<p>');\n\t      str += '</p>';\n\t      grafsOut.push(str);\n\t    }\n\t  }\n\t\n\t  /** Unhashify HTML blocks */\n\t  end = grafsOut.length;\n\t  for (i = 0; i < end; i++) {\n\t    var blockText = '',\n\t        grafsOutIt = grafsOut[i],\n\t        codeFlag = false;\n\t    // if this is a marker for an html block...\n\t    while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n\t      var delim = RegExp.$1,\n\t          num   = RegExp.$2;\n\t\n\t      if (delim === 'K') {\n\t        blockText = globals.gHtmlBlocks[num];\n\t      } else {\n\t        // we need to check if ghBlock is a false positive\n\t        if (codeFlag) {\n\t          // use encoded version of all text\n\t          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text);\n\t        } else {\n\t          blockText = globals.ghCodeBlocks[num].codeblock;\n\t        }\n\t      }\n\t      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\t\n\t      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText);\n\t      // Check if grafsOutIt is a pre->code\n\t      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n\t        codeFlag = true;\n\t      }\n\t    }\n\t    grafsOut[i] = grafsOutIt;\n\t  }\n\t  text = grafsOut.join('\\n\\n');\n\t  // Strip leading and trailing lines:\n\t  text = text.replace(/^\\n+/g, '');\n\t  text = text.replace(/\\n+$/g, '');\n\t  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n\t});\n\t\r\n\t/**\n\t * Run extension\n\t */\n\tshowdown.subParser('runExtension', function (ext, text, options, globals) {\n\t  'use strict';\n\t\n\t  if (ext.filter) {\n\t    text = ext.filter(text, globals.converter, options);\n\t\n\t  } else if (ext.regex) {\n\t    // TODO remove this when old extension loading mechanism is deprecated\n\t    var re = ext.regex;\n\t    if (!re instanceof RegExp) {\n\t      re = new RegExp(re, 'g');\n\t    }\n\t    text = text.replace(re, ext.replace);\n\t  }\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * These are all the transformations that occur *within* block-level\n\t * tags like paragraphs, headers, and list items.\n\t */\n\tshowdown.subParser('spanGamut', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n\t  text = showdown.subParser('codeSpans')(text, options, globals);\n\t  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n\t  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\t\n\t  // Process anchor and image tags. Images must come first,\n\t  // because ![foo][f] looks like an anchor.\n\t  text = showdown.subParser('images')(text, options, globals);\n\t  text = showdown.subParser('anchors')(text, options, globals);\n\t\n\t  // Make links out of things like `<http://example.com/>`\n\t  // Must come after _DoAnchors(), because you can use < and >\n\t  // delimiters in inline links like [this](<url>).\n\t  text = showdown.subParser('autoLinks')(text, options, globals);\n\t  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\t  text = showdown.subParser('italicsAndBold')(text, options, globals);\n\t  text = showdown.subParser('strikethrough')(text, options, globals);\n\t\n\t  // Do hard breaks:\n\t  text = text.replace(/  +\\n/g, ' <br />\\n');\n\t\n\t  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n\t  return text;\n\t});\n\t\r\n\tshowdown.subParser('strikethrough', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  if (options.strikethrough) {\n\t    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n\t    text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>');\n\t    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n\t  }\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Strip any lines consisting only of spaces and tabs.\n\t * This makes subsequent regexs easier to write, because we can\n\t * match consecutive blank lines with /\\n+/ instead of something\n\t * contorted like /[ \\t]*\\n+/\n\t */\n\tshowdown.subParser('stripBlankLines', function (text) {\n\t  'use strict';\n\t  return text.replace(/^[ \\t]+$/mg, '');\n\t});\n\t\r\n\t/**\n\t * Strips link definitions from text, stores the URLs and titles in\n\t * hash references.\n\t * Link defs are in the form: ^[id]: url \"optional title\"\n\t *\n\t * ^[ ]{0,3}\\[(.+)\\]: // id = $1  attacklab: g_tab_width - 1\n\t * [ \\t]*\n\t * \\n?                  // maybe *one* newline\n\t * [ \\t]*\n\t * <?(\\S+?)>?          // url = $2\n\t * [ \\t]*\n\t * \\n?                // maybe one newline\n\t * [ \\t]*\n\t * (?:\n\t * (\\n*)              // any lines skipped = $3 attacklab: lookbehind removed\n\t * [\"(]\n\t * (.+?)              // title = $4\n\t * [\")]\n\t * [ \\t]*\n\t * )?                 // title is optional\n\t * (?:\\n+|$)\n\t * /gm,\n\t * function(){...});\n\t *\n\t */\n\tshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm;\n\t\n\t  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\t  text += '~0';\n\t\n\t  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n\t    linkId = linkId.toLowerCase();\n\t    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url);  // Link IDs are case-insensitive\n\t\n\t    if (blankLines) {\n\t      // Oops, found blank lines, so it's not a title.\n\t      // Put back the parenthetical statement we stole.\n\t      return blankLines + title;\n\t\n\t    } else {\n\t      if (title) {\n\t        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n\t      }\n\t      if (options.parseImgDimensions && width && height) {\n\t        globals.gDimensions[linkId] = {\n\t          width:  width,\n\t          height: height\n\t        };\n\t      }\n\t    }\n\t    // Completely remove the definition from the text\n\t    return '';\n\t  });\n\t\n\t  // attacklab: strip sentinel\n\t  text = text.replace(/~0/, '');\n\t\n\t  return text;\n\t});\n\t\r\n\tshowdown.subParser('tables', function (text, options, globals) {\n\t  'use strict';\n\t\n\t  if (!options.tables) {\n\t    return text;\n\t  }\n\t\n\t  var tableRgx = /^[ \\t]{0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[^]+?(?:\\n\\n|~0)/gm;\n\t\n\t  function parseStyles(sLine) {\n\t    if (/^:[ \\t]*--*$/.test(sLine)) {\n\t      return ' style=\"text-align:left;\"';\n\t    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n\t      return ' style=\"text-align:right;\"';\n\t    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n\t      return ' style=\"text-align:center;\"';\n\t    } else {\n\t      return '';\n\t    }\n\t  }\n\t\n\t  function parseHeaders(header, style) {\n\t    var id = '';\n\t    header = header.trim();\n\t    if (options.tableHeaderId) {\n\t      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n\t    }\n\t    header = showdown.subParser('spanGamut')(header, options, globals);\n\t\n\t    return '<th' + id + style + '>' + header + '</th>\\n';\n\t  }\n\t\n\t  function parseCells(cell, style) {\n\t    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n\t    return '<td' + style + '>' + subText + '</td>\\n';\n\t  }\n\t\n\t  function buildTable(headers, cells) {\n\t    var tb = '<table>\\n<thead>\\n<tr>\\n',\n\t        tblLgn = headers.length;\n\t\n\t    for (var i = 0; i < tblLgn; ++i) {\n\t      tb += headers[i];\n\t    }\n\t    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\t\n\t    for (i = 0; i < cells.length; ++i) {\n\t      tb += '<tr>\\n';\n\t      for (var ii = 0; ii < tblLgn; ++ii) {\n\t        tb += cells[i][ii];\n\t      }\n\t      tb += '</tr>\\n';\n\t    }\n\t    tb += '</tbody>\\n</table>\\n';\n\t    return tb;\n\t  }\n\t\n\t  text = globals.converter._dispatch('tables.before', text, options, globals);\n\t\n\t  text = text.replace(tableRgx, function (rawTable) {\n\t\n\t    var i, tableLines = rawTable.split('\\n');\n\t\n\t    // strip wrong first and last column if wrapped tables are used\n\t    for (i = 0; i < tableLines.length; ++i) {\n\t      if (/^[ \\t]{0,3}\\|/.test(tableLines[i])) {\n\t        tableLines[i] = tableLines[i].replace(/^[ \\t]{0,3}\\|/, '');\n\t      }\n\t      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n\t        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n\t      }\n\t    }\n\t\n\t    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n\t        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n\t        rawCells = [],\n\t        headers = [],\n\t        styles = [],\n\t        cells = [];\n\t\n\t    tableLines.shift();\n\t    tableLines.shift();\n\t\n\t    for (i = 0; i < tableLines.length; ++i) {\n\t      if (tableLines[i].trim() === '') {\n\t        continue;\n\t      }\n\t      rawCells.push(\n\t        tableLines[i]\n\t          .split('|')\n\t          .map(function (s) {\n\t            return s.trim();\n\t          })\n\t      );\n\t    }\n\t\n\t    if (rawHeaders.length < rawStyles.length) {\n\t      return rawTable;\n\t    }\n\t\n\t    for (i = 0; i < rawStyles.length; ++i) {\n\t      styles.push(parseStyles(rawStyles[i]));\n\t    }\n\t\n\t    for (i = 0; i < rawHeaders.length; ++i) {\n\t      if (showdown.helper.isUndefined(styles[i])) {\n\t        styles[i] = '';\n\t      }\n\t      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n\t    }\n\t\n\t    for (i = 0; i < rawCells.length; ++i) {\n\t      var row = [];\n\t      for (var ii = 0; ii < headers.length; ++ii) {\n\t        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\t\n\t        }\n\t        row.push(parseCells(rawCells[i][ii], styles[ii]));\n\t      }\n\t      cells.push(row);\n\t    }\n\t\n\t    return buildTable(headers, cells);\n\t  });\n\t\n\t  text = globals.converter._dispatch('tables.after', text, options, globals);\n\t\n\t  return text;\n\t});\n\t\r\n\t/**\n\t * Swap back in all the special characters we've hidden.\n\t */\n\tshowdown.subParser('unescapeSpecialChars', function (text) {\n\t  'use strict';\n\t\n\t  text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n\t    var charCodeToReplace = parseInt(m1);\n\t    return String.fromCharCode(charCodeToReplace);\n\t  });\n\t  return text;\n\t});\n\t\r\n\tvar root = this;\n\t\n\t// CommonJS/nodeJS Loader\n\tif (typeof module !== 'undefined' && module.exports) {\n\t  module.exports = showdown;\n\t\n\t// AMD Loader\n\t} else if (true) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t    'use strict';\n\t    return showdown;\n\t  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t// Regular Browser loader\n\t} else {\n\t  root.showdown = showdown;\n\t}\n\t}).call(this);\r\n\t\n\t//# sourceMappingURL=showdown.js.map\r\n\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (router) {\n\t  router.map({\n\t    '/': {\n\t      component: _Home2.default,\n\t      subRoutes: {\n\t        '/edit': {\n\t          component: _Edit2.default\n\t        },\n\t        '/edit/:id': {\n\t          component: _Edit2.default\n\t        },\n\t        '/articles/': {\n\t          component: _Articles2.default\n\t        },\n\t        '/articles/:id': {\n\t          component: _Articles2.default\n\t        }\n\t      }\n\t    }\n\t  });\n\t};\n\t\n\tvar _Home = __webpack_require__(285);\n\t\n\tvar _Home2 = _interopRequireDefault(_Home);\n\t\n\tvar _Edit = __webpack_require__(284);\n\t\n\tvar _Edit2 = _interopRequireDefault(_Edit);\n\t\n\tvar _Articles = __webpack_require__(283);\n\t\n\tvar _Articles2 = _interopRequireDefault(_Articles);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Nav = __webpack_require__(282);\n\t\n\tvar _Nav2 = _interopRequireDefault(_Nav);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    NavComponent: _Nav2.default\n\t  },\n\t  ready: function ready() {\n\t    console.log('ready');\n\t  }\n\t};\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _markdown = __webpack_require__(259);\n\t\n\tvar _highlight = __webpack_require__(16);\n\t\n\tvar _highlight2 = _interopRequireDefault(_highlight);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: {\n\t    articles: {\n\t      type: Array,\n\t      default: [{\n\t        id: 0,\n\t        title: '加载中...',\n\t        content: '加载中...',\n\t        publishTime: '2016-01-01'\n\t      }]\n\t    }\n\t  },\n\t  watch: {\n\t    'articles': function articles(val, oldVal) {\n\t      document.querySelectorAll('pre code').forEach(function (block) {\n\t        _highlight2.default.highlightBlock(block);\n\t      });\n\t    }\n\t  },\n\t  methods: {\n\t    jumpToEdit: function jumpToEdit(id) {\n\t      window.router.go('/edit/' + id);\n\t    },\n\t    addCurrentClass: function addCurrentClass(event) {\n\t      var currentTarget = event.currentTarget;\n\t      var currentItem = document.querySelector('.article-list .current');\n\t      if (currentItem) currentItem.className = '';\n\t      currentTarget.className = 'current';\n\t    },\n\t\n\t    markedContent: function markedContent() {\n\t      var me = this;\n\t      var html = '';\n\t      var markedContent;\n\t      if (me.articles[this.$route.params.id - 1]) {\n\t        markedContent = me.articles[this.$route.params.id - 1].content || '';\n\t      } else {\n\t        markedContent = me.articles[0].content || '';\n\t      }\n\t      html += _markdown.markdown.toHTML(markedContent);\n\t      return html;\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _getIterator2 = __webpack_require__(52);\n\t\n\tvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\t\n\tvar _showdown = __webpack_require__(4);\n\t\n\tvar _showdown2 = _interopRequireDefault(_showdown);\n\t\n\tvar _highlight = __webpack_require__(16);\n\t\n\tvar _highlight2 = _interopRequireDefault(_highlight);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      article: {\n\t        id: 0,\n\t        title: '',\n\t        content: '',\n\t        status: 1\n\t      }\n\t    };\n\t  },\n\t\n\t  watch: {\n\t    'article.content': function articleContent(val, oldVal) {\n\t      document.querySelectorAll('pre code').forEach(function (block) {\n\t        _highlight2.default.highlightBlock(block);\n\t      });\n\t    }\n\t  },\n\t  methods: {\n\t    inputTitle: function inputTitle(event) {\n\t      this.article.title = event.target.value;\n\t    },\n\t    inputContent: function inputContent(event) {\n\t      this.article.content = event.target.value;\n\t    },\n\t    saveArticle: function saveArticle(type) {\n\t      var postData = {\n\t        id: this.$route.params.id || 0,\n\t        author: 'shuiyi',\n\t        title: this.article.title,\n\t        content: this.article.content,\n\t        status: type === 'publish' ? 2 : 1\n\t      };\n\t      if (postData.id === 0) {\n\t        this.addArticle(postData);\n\t      } else {\n\t        this.editArticle(postData);\n\t      }\n\t    },\n\t    addArticle: function addArticle(postData) {\n\t      var me = this;\n\t      this.$http.post('/api/article/add', postData).then(function (response) {\n\t        var resData = response.data;\n\t        var article = resData[resData.length - 1];\n\t        me.article = {\n\t          id: article.id,\n\t          title: article.title,\n\t          content: article.content,\n\t          status: article.status\n\t        };\n\t        !me.$route.params.id && window.router.go('/edit/' + article.id);\n\t      }, function (err) {\n\t        console.log(err);\n\t      });\n\t    },\n\t    editArticle: function editArticle(postData) {\n\t      var me = this;\n\t      this.$http.post('/api/article/edit', postData).then(function (response) {\n\t        var resData = response.data;\n\t        var article = resData[0];\n\t        me.article = {\n\t          id: article.id,\n\t          title: article.title,\n\t          content: article.content,\n\t          status: article.status\n\t        };\n\t      }, function (err) {\n\t        console.log(err);\n\t      });\n\t    },\n\t    delArticle: function delArticle() {\n\t      var me = this;\n\t      var postData = {\n\t        id: me.article.id\n\t      };\n\t      this.$http.post('/api/article/del', postData).then(function (response) {\n\t        var resData = response.data;\n\t        if (resData.errno === 0) {\n\t          window.router.go('/articles');\n\t        }\n\t      }, function (err) {\n\t        console.log(err);\n\t      });\n\t    },\n\t\n\t    getArticles: function getArticles(id) {\n\t      var me = this;\n\t      this.$http.post('/api/article/index', { id: id }).then(function (response) {\n\t        var article = response.data[0];\n\t        me.article = {\n\t          id: article.id,\n\t          title: article.title,\n\t          content: article.content\n\t        };\n\t      }, function (err) {\n\t        console.log(err);\n\t      });\n\t    },\n\t    markedContent: function markedContent() {\n\t      var me = this;\n\t      var converter = new _showdown2.default.Converter({ tables: true });\n\t      var markedContent = me.article.content || '';\n\t      return converter.makeHtml(markedContent);\n\t    },\n\t    fileUpload: function fileUpload(event) {\n\t      var me = this;\n\t      var upload = document.getElementById('upload');\n\t      var files = upload.files;\n\t      var formData = new window.FormData();\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = (0, _getIterator3.default)(files), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var file = _step.value;\n\t\n\t          formData.append('file', file);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (files[0]) {\n\t        this.$http.post('/api/upload', formData).then(function (response) {\n\t          var resData = response.data;\n\t          var imageData = resData[0].data;\n\t          var imageName = imageData.name;\n\t          var imageUrl = imageData.url;\n\t          me.article.content += '\\r\\n![' + imageName + '](' + imageUrl + ')';\n\t        }, function (err) {\n\t          console.log(err);\n\t        });\n\t      }\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var me = this;\n\t    var id = me.$route.params.id;\n\t    id && me.getArticles(Number(id));\n\t\n\t    this.$watch('$route.params.id', function (newVal, oldVal) {\n\t      if (newVal) {\n\t        me.getArticles(Number(newVal));\n\t      } else {\n\t        me.article = {\n\t          id: 0,\n\t          title: '',\n\t          content: '',\n\t          status: 1\n\t        };\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar navBarList = [{\n\t  name: '新建',\n\t  icon: 'icon-23',\n\t  href: '/edit',\n\t  current: false\n\t}, {\n\t  name: '文章列表',\n\t  icon: 'icon-24',\n\t  href: '/articles',\n\t  current: false\n\t}, {\n\t  name: '其他',\n\t  icon: 'icon-40',\n\t  href: '/others',\n\t  current: false\n\t}];\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      navBarList: navBarList,\n\t      current: false\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    addCurrentClass: function addCurrentClass($index) {\n\t      this.navBarList.forEach(function (item, index) {\n\t        item.current = index === $index;\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ArticleList = __webpack_require__(280);\n\t\n\tvar _ArticleList2 = _interopRequireDefault(_ArticleList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      articles: [1]\n\t    };\n\t  },\n\t\n\t  components: {\n\t    ArticleComponent: _ArticleList2.default\n\t  },\n\t  methods: {\n\t    getArticles: function getArticles() {\n\t      var me = this;\n\t      this.$http.post('/api/article/index', {}).then(function (response) {\n\t        me.articles = response.data;\n\t      }, function (err) {\n\t        console.log(err);\n\t      });\n\t    }\n\t  },\n\t  created: function created() {\n\t    this.getArticles();\n\t  }\n\t};\n\n/***/ },\n\n/***/ 39:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Content = __webpack_require__(281);\n\t\n\tvar _Content2 = _interopRequireDefault(_Content);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: 'hello vue'\n\t    };\n\t  },\n\t\n\t  components: {\n\t    ContentComponent: _Content2.default\n\t  }\n\t};\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: 'hello vue'\n\t    };\n\t  }\n\t};\n\n/***/ },\n\n/***/ 83:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 84:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 85:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 87:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 89:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 92:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 261:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div id=admin> <nav-component></nav-component> <router-view></router-view> </div> \";\n\n/***/ },\n\n/***/ 262:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <content-component></content-component> \";\n\n/***/ },\n\n/***/ 263:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <router-view></router-view> \";\n\n/***/ },\n\n/***/ 268:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <main class=content _v-04d2ff30=\\\"\\\"> <section class=content-container _v-04d2ff30=\\\"\\\"> <header _v-04d2ff30=\\\"\\\"> <input type=text placeholder=输入标题 v-model=article.title v-on:input=inputTitle _v-04d2ff30=\\\"\\\"> <button class=content-save v-on:click=saveArticle _v-04d2ff30=\\\"\\\">保存</button> <button class=content-publish v-on:click=\\\"saveArticle('publish')\\\" _v-04d2ff30=\\\"\\\">发布</button> <button class=content-delete v-on:click=delArticle _v-04d2ff30=\\\"\\\">删除</button> </header> <section class=content-area _v-04d2ff30=\\\"\\\"> <section class=content-edit _v-04d2ff30=\\\"\\\"> <textarea placeholder=输入文章内容 v-on:input=inputContent _v-04d2ff30=\\\"\\\">{{article.content}}</textarea> <div class=upload-btn _v-04d2ff30=\\\"\\\"> <input id=upload type=file multiple=multiple accept=image/png,image/gif,image/jpg,image/jpeg,image/img name=file v-on:change=fileUpload _v-04d2ff30=\\\"\\\"> </div> </section> <section class=content-preview _v-04d2ff30=\\\"\\\"> <div class=wrap _v-04d2ff30=\\\"\\\"> <div class=markdown-body v-html=markedContent() _v-04d2ff30=\\\"\\\"></div> </div> </section> </section> </section> </main> \";\n\n/***/ },\n\n/***/ 270:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <nav class=nav-bar _v-079c365a=\\\"\\\"> <header _v-079c365a=\\\"\\\"> <div class=user-detail _v-079c365a=\\\"\\\"> <h2 class=\\\"iconfont icon-01\\\" _v-079c365a=\\\"\\\">水乙的博客</h2> <p _v-079c365a=\\\"\\\">文章管理系统</p> </div> </header> <ul _v-079c365a=\\\"\\\"> <li v-for=\\\"item in navBarList\\\" v-on:click=addCurrentClass($index) v-bind:class=\\\"item.current ? 'current' : ''\\\" _v-079c365a=\\\"\\\"> <a v-link=\\\"{ path: item.href }\\\" _v-079c365a=\\\"\\\"><i class=\\\"{{'iconfont ' + item.icon}}\\\" _v-079c365a=\\\"\\\"></i>{{item.name}}</a> </li> </ul> </nav> \";\n\n/***/ },\n\n/***/ 272:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <article-component :articles=articles _v-1704b8bd=\\\"\\\"></article-component> \";\n\n/***/ },\n\n/***/ 275:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <main class=article-list-container _v-4406546b=\\\"\\\"> <section class=article-list _v-4406546b=\\\"\\\"> <ul _v-4406546b=\\\"\\\"> <li v-for=\\\"item in articles\\\" v-bind:class=\\\"[item.id == $route.params.id ? 'current' : '']\\\" v-on:click=addCurrentClass _v-4406546b=\\\"\\\"> <a v-link=\\\"'/articles/' + item.id\\\" _v-4406546b=\\\"\\\"> <section _v-4406546b=\\\"\\\"> <h3 class=article-title _v-4406546b=\\\"\\\">{{item.title}}</h3> <p class=article-author _v-4406546b=\\\"\\\"> <i class=\\\"iconfont icon-01\\\" _v-4406546b=\\\"\\\"></i> {{item.author}} <time _v-4406546b=\\\"\\\"><i class=\\\"iconfont icon-06\\\" _v-4406546b=\\\"\\\"></i>{{item.publishTime}}</time> </p> <span v-bind:class=\\\"['article-status',item.status === 1 ? 'draft' : 'published']\\\" _v-4406546b=\\\"\\\"> {{item.status === 1 ? '草稿' : '发布'}} </span> </section> </a> </li> </ul> </section> <section class=article-content v-if=$route.params.id _v-4406546b=\\\"\\\"> <div class=\\\"edit-btn iconfont icon-23\\\" v-on:click=jumpToEdit($route.params.id) _v-4406546b=\\\"\\\"></div> <div class=wrap _v-4406546b=\\\"\\\"> <div class=markdown-body v-html=markedContent() _v-4406546b=\\\"\\\"></div> </div> </section> </main> \";\n\n/***/ },\n\n/***/ 279:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(83)\n\t__vue_script__ = __webpack_require__(34)\n\t__vue_template__ = __webpack_require__(261)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 280:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(92)\n\t__vue_script__ = __webpack_require__(35)\n\t__vue_template__ = __webpack_require__(275)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 281:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(85)\n\t__vue_script__ = __webpack_require__(36)\n\t__vue_template__ = __webpack_require__(268)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 282:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(87)\n\t__vue_script__ = __webpack_require__(37)\n\t__vue_template__ = __webpack_require__(270)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 283:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(89)\n\t__vue_script__ = __webpack_require__(38)\n\t__vue_template__ = __webpack_require__(272)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 284:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(39)\n\t__vue_template__ = __webpack_require__(262)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 285:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(84)\n\t__vue_script__ = __webpack_require__(40)\n\t__vue_template__ = __webpack_require__(263)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** static/js/admin.d847522c82bcbe30f3d3.js\n **/","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport VueResource from 'vue-resource'\nimport configRouter from './routes'\nimport Admin from './Admin'\n\nVue.use(VueRouter)\nVue.use(VueResource)\n\nconst router = new VueRouter({\n  history: false\n})\n\nconfigRouter(router)\n\nrouter.start(Vue.extend(Admin), '#root')\n\nwindow.router = router\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/admin/index.js\n **/",";/*! showdown 21-06-2016 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts(simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      default: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      default: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      default: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    headerLevelStart: {\n      default: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      default: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      default: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      default: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      default: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      default: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      default: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      default: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      default: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      default: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      default: false,\n      description: 'Tries to smartly fix identation in es6 strings',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].default;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:   true,\n        prefixHeaderId:            'user-content-',\n        simplifiedAutoLink:        true,\n        literalMidWordUnderscores: true,\n        strikethrough:             true,\n        tables:                    true,\n        tablesHeaderId:            true,\n        ghCodeBlocks:              true,\n        tasklists:                 true\n      },\n      vanilla: getDefaultOpts(true)\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    var preset = flavor[name];\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        globalOptions[option] = preset[option];\n      }\n    }\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate(extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n    ret = {\n      valid: true,\n      error: ''\n    };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!ext.regex instanceof RegExp) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function isString(a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function isFunction(a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * ForEach helper function\n * @static\n * @param {*} obj\n * @param {function} callback\n */\nshowdown.helper.forEach = function forEach(obj, callback) {\n  'use strict';\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  }\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function isArray(a) {\n  'use strict';\n  return a.constructor === Array;\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function isUndefined(value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_-]||\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback(wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '~E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function escapeCharacters(text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n    g = f.indexOf('g') > -1,\n    x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n    l = new RegExp(left, f.replace(/g/g, '')),\n    pos = [],\n    t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n    results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * POLYFILLS\n */\nif (showdown.helper.isUndefined(console)) {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {};\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor() {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension(ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty(listeners)) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading(ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen(name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText(text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    []\n    };\n\n    // attacklab: Replace ~ with ~T\n    // This lets us use tilde as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/~/g, '~T');\n\n    // attacklab: Replace $ with ~D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '~D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    // stripBlankLines\n    text = showdown.subParser('stripBlankLines')(text, options, globals);\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/~D/g, '$$');\n\n    // attacklab: Restore tildes\n    text = text.replace(/~T/g, '~');\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    return text;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (flavor.hasOwnProperty(name)) {\n      var preset = flavor[name];\n      for (var option in preset) {\n        if (preset.hasOwnProperty(option)) {\n          options[option] = preset[option];\n        }\n      }\n    }\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = '';\n    }\n    wholeMatch = m1;\n    var linkText = m2,\n        linkId = m3.toLowerCase(),\n        url = m4,\n        title = m7;\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = '';\n        } else {\n          return wholeMatch;\n        }\n      }\n    }\n\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  /*\n   text = text.replace(/\n   (\t\t\t\t\t\t\t// wrap whole match in $1\n   \\[\n   (\n   (?:\n   \\[[^\\]]*\\]\t\t// allow brackets nested one level\n   |\n   [^\\[]\t\t\t// or anything else\n   )*\n   )\n   \\]\n\n   [ ]?\t\t\t\t\t// one optional space\n   (?:\\n[ ]*)?\t\t\t\t// one optional newline followed by spaces\n\n   \\[\n   (.*?)\t\t\t\t\t// id = $3\n   \\]\n   )()()()()\t\t\t\t\t// pad remaining backreferences\n   /g,_DoAnchors_callback);\n   */\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\n  //\n  // Next, inline-style links: [link text](url \"optional title\")\n  //\n\n  /*\n   text = text.replace(/\n   (\t\t\t\t\t\t// wrap whole match in $1\n   \\[\n   (\n   (?:\n   \\[[^\\]]*\\]\t// allow brackets nested one level\n   |\n   [^\\[\\]]\t\t\t// or anything else\n   )\n   )\n   \\]\n   \\(\t\t\t\t\t\t// literal paren\n   [ \\t]*\n   ()\t\t\t\t\t\t// no id, so leave $3 empty\n   <?(.*?)>?\t\t\t\t// href = $4\n   [ \\t]*\n   (\t\t\t\t\t\t// $5\n   (['\"])\t\t\t\t// quote char = $6\n   (.*?)\t\t\t\t// Title = $7\n   \\6\t\t\t\t\t// matching quote\n   [ \\t]*\t\t\t\t// ignore any spaces/tabs between closing quote and )\n   )?\t\t\t\t\t\t// title is optional\n   \\)\n   )\n   /g,writeAnchorTag);\n   */\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n                      writeAnchorTag);\n\n  //\n  // Last, handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  //\n\n  /*\n   text = text.replace(/\n   (                // wrap whole match in $1\n   \\[\n   ([^\\[\\]]+)       // link text = $2; can't contain '[' or ']'\n   \\]\n   )()()()()()      // pad rest of backreferences\n   /g, writeAnchorTag);\n   */\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)(?=\\s|$)(?![\"<>])/gi,\n      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n      simpleMailRegex = /(?:^|[ \\n\\t])([A-Za-z0-9!#$%&'*+-/=?^_`\\{|}~\\.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|[ \\n\\t])/gi,\n      delimMailRegex  = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\n  text = text.replace(delimUrlRegex, '<a href=\\\"$1\\\">$1</a>');\n  text = text.replace(delimMailRegex, replaceMail);\n  //simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    text = text.replace(simpleURLRegex, '<a href=\\\"$1\\\">$1</a>');\n    text = text.replace(simpleMailRegex, replaceMail);\n  }\n\n  function replaceMail(wholeMatch, m1) {\n    var unescapedStr = showdown.subParser('unescapeSpecialChars')(m1);\n    return showdown.subParser('encodeEmailAddress')(unescapedStr);\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^[ ]{0,2}([ ]?_[ ]?){3,}[ \\t]*$/gm, key);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n  /*\n   text = text.replace(/\n   (\t\t\t\t\t\t\t\t// Wrap whole match in $1\n   (\n   ^[ \\t]*>[ \\t]?\t\t\t// '>' at the start of a line\n   .+\\n\t\t\t\t\t// rest of the first line\n   (.+\\n)*\t\t\t\t\t// subsequent consecutive lines\n   \\n*\t\t\t\t\t\t// blanks\n   )+\n   )\n   /gm, function(){...});\n   */\n\n  text = text.replace(/((^[ \\t]{0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1;\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0'); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/~0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '~0');\n      pre = pre.replace(/~0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n  /*\n   text = text.replace(text,\n   /(?:\\n\\n|^)\n   (\t\t\t\t\t\t\t\t// $1 = the code block -- one or more lines, starting with a space/tab\n   (?:\n   (?:[ ]{4}|\\t)\t\t\t// Lines must start with a tab or a tab-width of spaces - attacklab: g_tab_width\n   .*\\n+\n   )+\n   )\n   (\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))\t// attacklab: g_tab_width\n   /g,function(){...});\n   */\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock);\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  /*\n   text = text.replace(/\n   (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n   (`+)\t\t\t\t\t\t// $2 = Opening run of `\n   (\t\t\t\t\t\t\t// $3 = The code block\n   [^\\r]*?\n   [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n   )\n   \\2\t\t\t\t\t\t\t// Matching closer\n   (?!`)\n   /gm, function(){...});\n   */\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c);\n      return m1 + '<code>' + c + '</code>';\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text) {\n  'use strict';\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '~A~B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/~A/g, '    ');  // g_tab_width\n  text = text.replace(/~B/g, '');\n\n  return text;\n\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text) {\n  'use strict';\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;');\n\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text) {\n  'use strict';\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text) {\n  'use strict';\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text.replace(/&/g, '&amp;');\n\n  // Do the angle bracket song and dance:\n  text = text.replace(/</g, '&lt;');\n  text = text.replace(/>/g, '&gt;');\n\n  // Now, escape characters that are magic in Markdown:\n  text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false);\n\n  // jj the line above breaks this:\n  //---\n  //* Item\n  //   1. Subitem\n  //            special char: *\n  // ---\n\n  return text;\n});\n\r\n/**\n *  Input: an email address, e.g. \"foo@example.com\"\n *\n *  Output: the email address as a mailto link, with each character\n *    of the address encoded as either a decimal or hex entity, in\n *    the hopes of foiling most address harvesting spam bots. E.g.:\n *\n *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n *\n *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n *  mailing list: <http://tinyurl.com/yu7ue>\n *\n */\nshowdown.subParser('encodeEmailAddress', function (addr) {\n  'use strict';\n\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  addr = 'mailto:' + addr;\n\n  addr = addr.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else if (ch !== ':') {\n      // leave ':' alone (to spot mailto: later)\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  addr = '<a href=\"' + addr + '\">' + addr + '</a>';\n  addr = addr.replace(/\">.+:/g, '\">'); // strip the mailto: from the visible part\n\n  return addr;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n  'use strict';\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n  text = text.replace(regex, function (wholeMatch) {\n    var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`');\n    tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false);\n    return tag;\n  });\n\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '~0';\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"~KxK\" where x is its key)\n    blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n\n  var blockTags = [\n      'pre',\n      'div',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'table',\n      'dl',\n      'ol',\n      'ul',\n      'script',\n      'noscript',\n      'form',\n      'fieldset',\n      'iframe',\n      'math',\n      'style',\n      'section',\n      'header',\n      'footer',\n      'nav',\n      'article',\n      'aside',\n      'address',\n      'audio',\n      'canvas',\n      'figure',\n      'hgroup',\n      'output',\n      'video',\n      'p'\n    ],\n    repFunc = function (wholeMatch, match, left, right) {\n      var txt = wholeMatch;\n      // check if this html element is marked as markdown\n      // if so, it's contents should be parsed as markdown\n      if (left.search(/\\bmarkdown\\b/) !== -1) {\n        txt = left + globals.converter.makeHtml(match) + right;\n      }\n      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n    };\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^(?: |\\\\t){0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n[ ]{0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments:\n  text = text.replace(/(<!(--[^\\r]*?--\\s*)+>[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)([ ]{0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');\n\n  for (var i = 0; i < matches.length; ++i) {\n    text = text.replace(matches[i][0], '~L' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'L');\n  }\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    text = text.replace('~L' + i + 'L', globals.gHtmlSpans[i]);\n  }\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, config, globals) {\n  'use strict';\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match) + right;\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^(?: |\\\\t){0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^(?: |\\\\t){0,3}</code>\\\\s*</pre>', 'gim');\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var prefixHeader = options.prefixHeaderId,\n      headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n      hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  text = text.replace(/^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId(m) {\n    var title, escapedId = m.replace(/[^\\w]/g, '').toLowerCase();\n\n    if (globals.hashLinkCounts[escapedId]) {\n      title = escapedId + '-' + (globals.hashLinkCounts[escapedId]++);\n    } else {\n      title = escapedId;\n      globals.hashLinkCounts[escapedId] = 1;\n    }\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (prefixHeader === true) {\n      prefixHeader = 'section';\n    }\n\n    if (showdown.helper.isString(prefixHeader)) {\n      return prefixHeader + title;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText.replace(/\"/g, '&quot;');\n    altText = showdown.helper.escapeCharacters(altText, '*_', false);\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    //underscores\n    // Since we are consuming a \\s character, we need to add it\n    text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([^]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>');\n    text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([^]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>');\n    //asterisks\n    text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\n  } else {\n    // <strong> must go first:\n    text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n  }\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '~0';\n\n    var rgx = /(\\n)?(^[ \\t]*)([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!~0)/.test(listStr));\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n      }\n      item =  '\\n<li' + bulletStyle + '>' + item + '</li>\\n';\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/~0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists(list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for UL and vice versa\n    var counterRxg = (listType === 'ul') ? /^ {0,2}\\d+\\.[ \\t]/gm : /^ {0,2}[*+-][ \\t]/gm,\n      subLists = [],\n      result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL(txt) {\n        var pos = txt.search(counterRxg);\n        if (pos !== -1) {\n          // slice\n          result += '\\n\\n<' + listType + '>' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? /^ {0,2}\\d+\\.[ \\t]/gm : /^ {0,2}[*+-][ \\t]/gm;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n\\n<' + listType + '>' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n\\n';\n        }\n      })(list);\n      for (var i = 0; i < subLists.length; ++i) {\n\n      }\n    } else {\n      result = '\\n\\n<' + listType + '>' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n\\n';\n    }\n\n    return result;\n  }\n\n  // attacklab: add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '~0';\n\n  // Re-usable pattern to match any entire ul or ol list:\n  var wholeList = /^(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm;\n\n  if (globals.gListLevel) {\n    text = text.replace(wholeList, function (wholeMatch, list, m2) {\n      var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n      return parseConsecutiveLists(list, listType, true);\n    });\n  } else {\n    wholeList = /(\\n\\n|^\\n?)(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm;\n    //wholeList = /(\\n\\n|^\\n?)( {0,3}([*+-]|\\d+\\.)[ \\t]+[\\s\\S]+?)(?=(~0)|(\\n\\n(?!\\t| {2,}| {0,3}([*+-]|\\d+\\.)[ \\t])))/g;\n    text = text.replace(wholeList, function (wholeMatch, m1, list, m3) {\n\n      var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n      return parseConsecutiveLists(list, listType);\n    });\n  }\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text) {\n  'use strict';\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/~0/g, '');\n\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n    } else {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!re instanceof RegExp) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n\n  // Do hard breaks:\n  text = text.replace(/  +\\n/g, ' <br />\\n');\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>');\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strip any lines consisting only of spaces and tabs.\n * This makes subsequent regexs easier to write, because we can\n * match consecutive blank lines with /\\n+/ instead of something\n * contorted like /[ \\t]*\\n+/\n */\nshowdown.subParser('stripBlankLines', function (text) {\n  'use strict';\n  return text.replace(/^[ \\t]+$/mg, '');\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n *\n * ^[ ]{0,3}\\[(.+)\\]: // id = $1  attacklab: g_tab_width - 1\n * [ \\t]*\n * \\n?                  // maybe *one* newline\n * [ \\t]*\n * <?(\\S+?)>?          // url = $2\n * [ \\t]*\n * \\n?                // maybe one newline\n * [ \\t]*\n * (?:\n * (\\n*)              // any lines skipped = $3 attacklab: lookbehind removed\n * [\"(]\n * (.+?)              // title = $4\n * [\")]\n * [ \\t]*\n * )?                 // title is optional\n * (?:\\n+|$)\n * /gm,\n * function(){...});\n *\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url);  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx = /^[ \\t]{0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[^]+?(?:\\n\\n|~0)/gm;\n\n  function parseStyles(sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders(header, style) {\n    var id = '';\n    header = header.trim();\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells(cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable(headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n');\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^[ \\t]{0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^[ \\t]{0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  });\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text) {\n  'use strict';\n\n  text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n  return text;\n});\n\r\nvar root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// AMD Loader\n} else if (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/showdown/dist/showdown.js\n ** module id = 4\n ** module chunks = 2 3\n **/","import Home from './page/Home.vue'\nimport Edit from './page/Edit.vue'\nimport Articles from './page/Articles.vue'\n\nexport default function (router) {\n  router.map({\n    '/': {\n      component: Home,\n      subRoutes: {\n        '/edit': {\n          component: Edit\n        },\n        '/edit/:id': {\n          component: Edit\n        },\n        '/articles/': {\n          component: Articles\n        },\n        '/articles/:id': {\n          component: Articles\n        }\n      }\n    }\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/admin/routes.js\n **/","<template>\n  <div id=\"admin\">\n    <nav-component></nav-component>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n  import NavComponent from './components/Nav'\n  export default {\n    components: {\n      NavComponent\n    },\n    ready () {\n      console.log('ready')\n    }\n  }\n</script>\n\n<style>\n  @import \"../../bower_components/HTML5-Reset/assets/css/reset.css\";\n  @import \"../../node_modules/highlight.js/styles/default.css\";\n  @import \"../assets/iconfont.css\";\n  html {\n    width: 100%;\n    height: 100%;\n  }\n\n  body {\n    width: 100%;\n    height: 100%;\n    font-family: \"Helvetica Neue\", Helvetica, 'Source Sans Pro',  Arial, sans-serif;\n    font-weight: 100;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  #admin {\n    position: relative;\n    flex-direction: row;\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n\n   a {\n    color: #5cc0ff;\n    text-decoration: none;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Admin.vue?fa278536\n **/","<template>\n  <main class=\"article-list-container\">\n    <section class=\"article-list\">\n      <ul>\n        <li v-for=\"item in articles\"\n            v-bind:class=\"[item.id == $route.params.id ? 'current' : '']\"\n            v-on:click=\"addCurrentClass\" >\n          <a v-link=\"'/articles/' + item.id\">\n            <section>\n              <h3 class=\"article-title\">{{item.title}}</h3>\n              <p class=\"article-author \">\n                <i class=\"iconfont icon-01\"></i>\n                {{item.author}}\n                <time><i class=\"iconfont icon-06\"></i>{{item.publishTime}}</time>\n              </p>\n              <span v-bind:class=\"['article-status',item.status === 1 ? 'draft' : 'published']\">\n                {{item.status === 1 ? '草稿' : '发布'}}\n              </span>\n            </section>\n          </a>\n        </li>\n      </ul>\n    </section>\n    <section class=\"article-content\" v-if=\"$route.params.id\">\n      <div class=\"edit-btn iconfont icon-23\" v-on:click=\"jumpToEdit($route.params.id)\"></div>\n      <div class=\"wrap\">\n        <div class=\"markdown-body\" v-html=\"markedContent()\"></div>\n      </div>\n    </section>\n\n  </main>\n</template>\n<script type=\"text/ecmascript-6\">\n  import {markdown} from 'markdown'\n  import hljs from 'highlight.js'\n\n  export default{\n    props: {\n      articles: {\n        type: Array,\n        default: [{\n          id: 0,\n          title: '加载中...',\n          content: '加载中...',\n          publishTime: '2016-01-01'\n        }]\n      }\n    },\n    watch: {\n      'articles': function (val, oldVal) {\n        document.querySelectorAll('pre code').forEach(block => {\n          hljs.highlightBlock(block)\n        })\n      }\n    },\n    methods: {\n      jumpToEdit: function (id) {\n        window.router.go('/edit/' + id)\n      },\n      addCurrentClass (event) {\n        var currentTarget = event.currentTarget\n        var currentItem = document.querySelector('.article-list .current')\n        if (currentItem) currentItem.className = ''\n        currentTarget.className = 'current'\n      },\n      markedContent: function () {\n        var me = this\n        var html = ''\n        var markedContent\n        if (me.articles[this.$route.params.id - 1]) {\n          markedContent = me.articles[this.$route.params.id - 1].content || ''\n        } else {\n          markedContent = me.articles[0].content || ''\n        }\n        html += markdown.toHTML(markedContent)\n        return html\n      }\n    }\n  }\n</script>\n<style rel=\"stylesheet/less\" type=\"text/css\" lang=\"less\" scoped>\n  @import \"../../../node_modules/github-markdown-css/github-markdown.css\";\n\n  .article-list-container {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 2;\n    flex-basis: 800px;\n\n\n      .article-list {\n        flex-grow: 1;\n        min-width: 50%;\n        overflow-y: scroll;\n\n        ul {\n          width: 100%;\n\n          li {\n            &:hover{\n              background: #fafafa;\n            }\n\n            a {\n              display: block;\n              padding: 20px;\n              border-bottom: 1px solid #e5e5e5;\n              color: #666;\n\n              &.v-link-active {\n                border-left: #5ba4e5 3px solid;\n              }\n\n              .article-title {\n                font-size: 20px;\n                min-height: 26px;\n                margin-bottom: 6px;\n              }\n              .article-author {\n                font-size: 12px;\n                color: #ccc;\n                margin-bottom: 6px;\n\n                i {\n                  &::before {\n                    font-size: 12px;\n                    color: #5cc0ff;\n                    margin-right: 4px;\n\n                  }\n                }\n              }\n              .article-summary {\n                font-size: 14px;\n                line-height: 1.5;\n                height: 42px;\n                text-overflow: ellipsis;\n                overflow: hidden;\n                color: #ccc;\n              }\n              .article-status{\n                color: #fff;\n                padding: 0 5px;\n                font-size: 12px;\n\n                &.draft{\n                  background: #b5b5b5;\n\n                }\n                &.published{\n                  background: #5cc0ff;\n\n                }\n              }\n            }\n\n          }\n        }\n\n      }\n      .article-content {\n        flex-grow: 1;\n        min-width: 50%;\n        padding:15px;\n        border-left: 1px solid #e5e5e5;\n        overflow-y: scroll;\n\n        .wrap {\n          width: 100%;\n          height: 100%;\n\n\n          h2{\n            font-size: 40px;\n            margin-bottom: 15px;\n          }\n\n          p{\n            font-size: 18px;\n            line-height: 1.5;\n          }\n\n        }\n\n        .edit-btn {\n          position: absolute;\n          right: 30px;\n          top: 30px;\n          cursor: pointer;\n        }\n      }\n\n\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** ArticleList.vue?2c77e36f\n **/","<template>\n  <main class=\"content\">\n    <section class=\"content-container\">\n      <header>\n        <input type=\"text\" placeholder=\"输入标题\"\n               v-model=\"article.title\"\n               v-on:input=\"inputTitle\">\n        <button class=\"content-save\" v-on:click=\"saveArticle\">保存</button>\n        <button class=\"content-publish\" v-on:click=\"saveArticle('publish')\">发布</button>\n        <button class=\"content-delete\" v-on:click=\"delArticle\">删除</button>\n\n      </header>\n      <section class=\"content-area\">\n        <section class=\"content-edit\">\n          <textarea placeholder=\"输入文章内容\"\n                    v-on:input=\"inputContent\">{{article.content}}</textarea>\n          <div class=\"upload-btn\">\n            <input\n              id=\"upload\"\n              type=\"file\"\n              multiple=\"multiple\"\n              accept=\"image/png,image/gif,image/jpg,image/jpeg,image/img\"\n              name=\"file\"\n              v-on:change=\"fileUpload\"/>\n          </div>\n        </section>\n        <section class=\"content-preview\">\n          <div class=\"wrap\">\n            <div class=\"markdown-body\" v-html=\"markedContent()\"></div>\n          </div>\n        </section>\n      </section>\n    </section>\n  </main>\n</template>\n<script type=\"text/ecmascript-6\">\n  import showdown from 'showdown'\n  import hljs from 'highlight.js'\n\n  export default{\n    data () {\n      return {\n        article: {\n          id: 0,\n          title: '',\n          content: '',\n          status: 1\n        }\n      }\n    },\n    watch: {\n      'article.content': function (val, oldVal) {\n        document.querySelectorAll('pre code').forEach(block => {\n          hljs.highlightBlock(block)\n        })\n      }\n    },\n    methods: {\n      inputTitle: function (event) {\n        this.article.title = event.target.value\n      },\n      inputContent: function (event) {\n        this.article.content = event.target.value\n      },\n      saveArticle: function (type) {\n        var postData = {\n          id: this.$route.params.id || 0,\n          author: 'shuiyi',\n          title: this.article.title,\n          content: this.article.content,\n          status: type === 'publish' ? 2 : 1\n        }\n        if (postData.id === 0) {\n          this.addArticle(postData)\n        } else {\n          this.editArticle(postData)\n        }\n      },\n      addArticle (postData) {\n        var me = this\n        this.$http.post('/api/article/add', postData).then((response) => {\n          var resData = response.data\n          var article = resData[resData.length - 1]\n          me.article = {\n            id: article.id,\n            title: article.title,\n            content: article.content,\n            status: article.status\n          }\n          !me.$route.params.id && window.router.go('/edit/' + article.id) // 添加文章后跳转到编辑文章页\n        }, (err) => {\n          console.log(err)\n        })\n      },\n      editArticle (postData) {\n        var me = this\n        this.$http.post('/api/article/edit', postData).then((response) => {\n          var resData = response.data\n          var article = resData[0]\n          me.article = {\n            id: article.id,\n            title: article.title,\n            content: article.content,\n            status: article.status\n          }\n        }, (err) => {\n          console.log(err)\n        })\n      },\n      delArticle () {\n        var me = this\n        var postData = {\n          id: me.article.id\n        }\n        this.$http.post('/api/article/del', postData).then((response) => {\n          var resData = response.data\n          if (resData.errno === 0) {\n            window.router.go('/articles')\n          }\n        }, (err) => {\n          console.log(err)\n        })\n      },\n      getArticles: function (id) {\n        var me = this\n        this.$http.post('/api/article/index', {id: id}).then((response) => {\n          var article = response.data[0]\n          me.article = {\n            id: article.id,\n            title: article.title,\n            content: article.content\n          }\n        }, (err) => {\n          console.log(err)\n        }\n        )\n      },\n      markedContent: function () {\n        var me = this\n        var converter = new showdown.Converter({tables: true})\n        var markedContent = me.article.content || ''\n        return converter.makeHtml(markedContent)\n      },\n      fileUpload (event) {\n        var me = this\n        var upload = document.getElementById('upload')\n        var files = upload.files\n        var formData = new window.FormData()\n        for (var file of files) {\n          formData.append('file', file)\n        }\n        if (files[0]) {\n          this.$http.post('/api/upload', formData).then((response) => {\n            var resData = response.data\n            var imageData = resData[0].data\n            var imageName = imageData.name\n            var imageUrl = imageData.url\n            me.article.content += `\\r\\n![${imageName}](${imageUrl})`\n          }, (err) => {\n            console.log(err)\n          })\n        }\n      }\n    },\n    ready: function () {\n      let me = this\n      let id = me.$route.params.id\n      id && me.getArticles(Number(id))\n\n      this.$watch('$route.params.id', function (newVal, oldVal) {\n        if (newVal) {\n          me.getArticles(Number(newVal))\n        } else {\n          me.article = {\n            id: 0,\n            title: '',\n            content: '',\n            status: 1\n          }\n        }\n      })\n    }\n  }\n</script>\n<style rel=\"stylesheet/less\" type=\"text/css\" lang=\"less\" scoped>\n  @import \"../../../node_modules/github-markdown-css/github-markdown.css\";\n\n  .content {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    flex-grow: 1;\n\n    .content-container {\n      display: flex;\n      flex-grow: 1;\n      flex-direction: column;\n\n      header {\n        flex-grow: 0;\n        min-height: 65px;\n        padding: 0 20px;\n        border-bottom: 1px solid #e5e5e5;\n        overflow: hidden;\n\n        input {\n          display: block;\n          width: 800px;\n          font-size: 32px;\n          line-height: 65px;\n          border: 0;\n          outline: transparent;\n        }\n        button {\n          position: absolute;\n          top: 16px;\n          padding: 5px 15px;\n          background: #5ba4e5;\n          color: #fff;\n          border: 1px solid #308ddf;\n          border-radius: 4px;\n\n          &:hover {\n            border-color: #1e73be;\n            background: #308ddf;\n          }\n          &:focus {\n            outline: none;\n          }\n\n          &.content-save {\n            right: 180px;\n          }\n          &.content-publish {\n            right: 110px;\n          }\n          &.content-delete {\n            right: 40px;\n          }\n        }\n      }\n\n      .content-area {\n        display: flex;\n        flex-grow: 1;\n\n        .content-edit {\n          display: flex;\n          flex-direction: column;\n          flex-grow: 1;\n          width: 50%;\n          border-right: 1px solid #e5e5e5;\n          textarea {\n            flex-grow: 1;\n            width: 100%;\n            height: 100%;\n            padding: 20px;\n            border: 0;\n            outline: transparent;\n          }\n\n        }\n        .content-preview {\n          display: flex;\n          flex-grow: 1;\n          flex-direction: column;\n          width: 50%;\n          padding: 20px;\n          .wrap {\n            width: 100%;\n            height: 100%;\n            overflow-y: scroll;\n\n            h2 {\n              font-size: 40px;\n              margin-bottom: 15px;\n            }\n\n            p {\n              font-size: 18px;\n              line-height: 1.5;\n            }\n\n          }\n        }\n      }\n    }\n\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Content.vue?943772d0\n **/","<template>\n  <nav class=\"nav-bar\" >\n    <header>\n      <div class=\"user-detail\">\n        <h2 class=\"iconfont icon-01\">水乙的博客</h2>\n        <p>文章管理系统</p>\n      </div>\n    </header>\n    <ul>\n      <li v-for=\"item in navBarList\"\n          v-on:click=\"addCurrentClass($index)\"\n          v-bind:class=\"item.current ? 'current' : ''\">\n        <a v-link=\"{ path: item.href }\" ><i class=\"{{'iconfont ' + item.icon}}\"></i>{{item.name}}</a>\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script>\n  var navBarList = [\n    {\n      name: '新建',\n      icon: 'icon-23',\n      href: '/edit',\n      current: false\n    },\n    {\n      name: '文章列表',\n      icon: 'icon-24',\n      href: '/articles',\n      current: false\n    },\n    {\n      name: '其他',\n      icon: 'icon-40',\n      href: '/others',\n      current: false\n    }\n  ]\n  export default {\n    data () {\n      return {\n        navBarList: navBarList,\n        current: false\n      }\n    },\n    methods: {\n      addCurrentClass: function ($index) {\n        this.navBarList.forEach(function (item, index) {\n          item.current = (index === $index)\n        })\n      }\n    }\n  }\n</script>\n\n<style rel=\"stylesheet/less\" type=\"text/css\" lang=\"less\" scoped>\n  .nav-bar{\n    min-width: 245px;\n    background: #fafafa;\n    border-right:1px solid #e5e5e5;\n    flex-grow: 0;\n\n    header{\n      padding: 15px;\n      .user-detail{\n        display: inline-block;\n        h2{\n          font-size: 16px;\n          line-height: 1.5;\n          color: #666;\n\n          &::before{\n            padding-right: 6px;\n          }\n        }\n        p{\n          font-size: 12px;\n          line-height: 1.5;\n          color: #ccc;\n        }\n      }\n    }\n    ul{\n      padding: 15px 30px 15px 0;\n\n      li{\n        padding: 6px 15px;\n        cursor: pointer;\n        a{\n          display: block;\n          color: #666;\n          font-size: 14px;\n\n          i{\n            padding-right: 5px;\n          }\n        }\n\n        &:hover{\n          background: rgba(91,164,229,0.15);\n          border-radius: 0 4px 4px 0;\n\n        }\n        &.current{\n          background: #88beec;\n          border-radius: 0 4px 4px 0;\n          a{\n            color: #fff;\n          }\n        }\n      }\n    }\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Nav.vue?c5e91bae\n **/","<template>\n  <article-component :articles=\"articles\"></article-component>\n</template>\n<script type=\"text/ecmascript-6\">\n  import ArticleComponent from '../components/ArticleList.vue'\n  export default{\n    data () {\n      return {\n        articles: [1]\n      }\n    },\n    components: {\n      ArticleComponent\n    },\n    methods: {\n      getArticles: function () {\n        var me = this\n        this.$http.post('/api/article/index', {}).then((response) => {\n          me.articles = response.data\n        },\n          (err) => {\n            console.log(err)\n          }\n        )\n      }\n    },\n    created: function () {\n      this.getArticles()\n    }\n  }\n</script>\n<style rel=\"stylesheet/less\" type=\"text/css\" lang=\"less\" scoped>\n\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Articles.vue?5c321b0f\n **/","<template>\n  <content-component></content-component>\n</template>\n<script>\n  import ContentComponent from '../components/Content.vue'\n  export default{\n    data () {\n      return {\n        msg: 'hello vue'\n      }\n    },\n    components: {\n      ContentComponent\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Edit.vue?eba584bc\n **/","<template>\n  <router-view></router-view>\n</template>\n<style>\n  body {\n    background-color: #ff0000;\n  }\n</style>\n<script>\n  export default{\n    data () {\n      return {\n        msg: 'hello vue'\n      }\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Home.vue?7683b70c\n **/","module.exports = \" <div id=admin> <nav-component></nav-component> <router-view></router-view> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/admin/Admin.vue\n ** module id = 261\n ** module chunks = 3\n **/","module.exports = \" <content-component></content-component> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/admin/page/Edit.vue\n ** module id = 262\n ** module chunks = 3\n **/","module.exports = \" <router-view></router-view> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/admin/page/Home.vue\n ** module id = 263\n ** module chunks = 3\n **/","module.exports = \" <main class=content _v-04d2ff30=\\\"\\\"> <section class=content-container _v-04d2ff30=\\\"\\\"> <header _v-04d2ff30=\\\"\\\"> <input type=text placeholder=输入标题 v-model=article.title v-on:input=inputTitle _v-04d2ff30=\\\"\\\"> <button class=content-save v-on:click=saveArticle _v-04d2ff30=\\\"\\\">保存</button> <button class=content-publish v-on:click=\\\"saveArticle('publish')\\\" _v-04d2ff30=\\\"\\\">发布</button> <button class=content-delete v-on:click=delArticle _v-04d2ff30=\\\"\\\">删除</button> </header> <section class=content-area _v-04d2ff30=\\\"\\\"> <section class=content-edit _v-04d2ff30=\\\"\\\"> <textarea placeholder=输入文章内容 v-on:input=inputContent _v-04d2ff30=\\\"\\\">{{article.content}}</textarea> <div class=upload-btn _v-04d2ff30=\\\"\\\"> <input id=upload type=file multiple=multiple accept=image/png,image/gif,image/jpg,image/jpeg,image/img name=file v-on:change=fileUpload _v-04d2ff30=\\\"\\\"> </div> </section> <section class=content-preview _v-04d2ff30=\\\"\\\"> <div class=wrap _v-04d2ff30=\\\"\\\"> <div class=markdown-body v-html=markedContent() _v-04d2ff30=\\\"\\\"></div> </div> </section> </section> </section> </main> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-04d2ff30!./~/vue-loader/lib/selector.js?type=template&index=0!./src/admin/components/Content.vue\n ** module id = 268\n ** module chunks = 3\n **/","module.exports = \" <nav class=nav-bar _v-079c365a=\\\"\\\"> <header _v-079c365a=\\\"\\\"> <div class=user-detail _v-079c365a=\\\"\\\"> <h2 class=\\\"iconfont icon-01\\\" _v-079c365a=\\\"\\\">水乙的博客</h2> <p _v-079c365a=\\\"\\\">文章管理系统</p> </div> </header> <ul _v-079c365a=\\\"\\\"> <li v-for=\\\"item in navBarList\\\" v-on:click=addCurrentClass($index) v-bind:class=\\\"item.current ? 'current' : ''\\\" _v-079c365a=\\\"\\\"> <a v-link=\\\"{ path: item.href }\\\" _v-079c365a=\\\"\\\"><i class=\\\"{{'iconfont ' + item.icon}}\\\" _v-079c365a=\\\"\\\"></i>{{item.name}}</a> </li> </ul> </nav> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-079c365a!./~/vue-loader/lib/selector.js?type=template&index=0!./src/admin/components/Nav.vue\n ** module id = 270\n ** module chunks = 3\n **/","module.exports = \" <article-component :articles=articles _v-1704b8bd=\\\"\\\"></article-component> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-1704b8bd!./~/vue-loader/lib/selector.js?type=template&index=0!./src/admin/page/Articles.vue\n ** module id = 272\n ** module chunks = 3\n **/","module.exports = \" <main class=article-list-container _v-4406546b=\\\"\\\"> <section class=article-list _v-4406546b=\\\"\\\"> <ul _v-4406546b=\\\"\\\"> <li v-for=\\\"item in articles\\\" v-bind:class=\\\"[item.id == $route.params.id ? 'current' : '']\\\" v-on:click=addCurrentClass _v-4406546b=\\\"\\\"> <a v-link=\\\"'/articles/' + item.id\\\" _v-4406546b=\\\"\\\"> <section _v-4406546b=\\\"\\\"> <h3 class=article-title _v-4406546b=\\\"\\\">{{item.title}}</h3> <p class=article-author _v-4406546b=\\\"\\\"> <i class=\\\"iconfont icon-01\\\" _v-4406546b=\\\"\\\"></i> {{item.author}} <time _v-4406546b=\\\"\\\"><i class=\\\"iconfont icon-06\\\" _v-4406546b=\\\"\\\"></i>{{item.publishTime}}</time> </p> <span v-bind:class=\\\"['article-status',item.status === 1 ? 'draft' : 'published']\\\" _v-4406546b=\\\"\\\"> {{item.status === 1 ? '草稿' : '发布'}} </span> </section> </a> </li> </ul> </section> <section class=article-content v-if=$route.params.id _v-4406546b=\\\"\\\"> <div class=\\\"edit-btn iconfont icon-23\\\" v-on:click=jumpToEdit($route.params.id) _v-4406546b=\\\"\\\"></div> <div class=wrap _v-4406546b=\\\"\\\"> <div class=markdown-body v-html=markedContent() _v-4406546b=\\\"\\\"></div> </div> </section> </main> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-4406546b!./~/vue-loader/lib/selector.js?type=template&index=0!./src/admin/components/ArticleList.vue\n ** module id = 275\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Admin.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Admin.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Admin.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/admin/Admin.vue\n ** module id = 279\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4406546b&scoped=true!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./ArticleList.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ArticleList.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-4406546b!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ArticleList.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/admin/components/ArticleList.vue\n ** module id = 280\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-04d2ff30&scoped=true!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Content.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Content.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-04d2ff30!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Content.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/admin/components/Content.vue\n ** module id = 281\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-079c365a&scoped=true!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Nav.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Nav.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-079c365a!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Nav.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/admin/components/Nav.vue\n ** module id = 282\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-1704b8bd&scoped=true!less-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Articles.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Articles.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-1704b8bd!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Articles.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/admin/page/Articles.vue\n ** module id = 283\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Edit.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Edit.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/admin/page/Edit.vue\n ** module id = 284\n ** module chunks = 3\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Home.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Home.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Home.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/admin/page/Home.vue\n ** module id = 285\n ** module chunks = 3\n **/"],"sourceRoot":""}